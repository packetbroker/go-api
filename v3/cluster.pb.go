// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: packetbroker/api/v3/cluster.proto

package packetbroker

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClusterAPIKey struct {
	// Unique identifier of the API key.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Cluster identifier.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Network rights.
	Rights []Right `protobuf:"varint,3,rep,packed,name=rights,proto3,enum=org.packetbroker.v3.Right" json:"rights,omitempty"`
	// Last authentication timestamp.
	AuthenticatedAt *types.Timestamp `protobuf:"bytes,4,opt,name=authenticated_at,json=authenticatedAt,proto3" json:"authenticated_at,omitempty"`
	// Secret key value.
	Key string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	// Key state.
	State                APIKeyState `protobuf:"varint,6,opt,name=state,proto3,enum=org.packetbroker.v3.APIKeyState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClusterAPIKey) Reset()         { *m = ClusterAPIKey{} }
func (m *ClusterAPIKey) String() string { return proto.CompactTextString(m) }
func (*ClusterAPIKey) ProtoMessage()    {}
func (*ClusterAPIKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_aac1b3320d25b58c, []int{0}
}
func (m *ClusterAPIKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAPIKey.Unmarshal(m, b)
}
func (m *ClusterAPIKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAPIKey.Marshal(b, m, deterministic)
}
func (m *ClusterAPIKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAPIKey.Merge(m, src)
}
func (m *ClusterAPIKey) XXX_Size() int {
	return xxx_messageInfo_ClusterAPIKey.Size(m)
}
func (m *ClusterAPIKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAPIKey.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAPIKey proto.InternalMessageInfo

func (m *ClusterAPIKey) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *ClusterAPIKey) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ClusterAPIKey) GetRights() []Right {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *ClusterAPIKey) GetAuthenticatedAt() *types.Timestamp {
	if m != nil {
		return m.AuthenticatedAt
	}
	return nil
}

func (m *ClusterAPIKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ClusterAPIKey) GetState() APIKeyState {
	if m != nil {
		return m.State
	}
	return APIKeyState_REQUESTED
}

func init() {
	proto.RegisterType((*ClusterAPIKey)(nil), "org.packetbroker.v3.ClusterAPIKey")
}

func init() { proto.RegisterFile("packetbroker/api/v3/cluster.proto", fileDescriptor_aac1b3320d25b58c) }

var fileDescriptor_aac1b3320d25b58c = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x6b, 0x83, 0x30,
	0x14, 0xc7, 0xb1, 0x4e, 0xa1, 0x19, 0xeb, 0x4a, 0xc6, 0x40, 0x84, 0x51, 0xb7, 0xcb, 0xdc, 0x25,
	0x82, 0xc2, 0x2e, 0x3b, 0x75, 0x63, 0x07, 0xd9, 0x65, 0xb8, 0x9d, 0x76, 0x29, 0x51, 0xdf, 0x52,
	0xb1, 0x36, 0x12, 0x9f, 0x05, 0xbf, 0xc2, 0x3e, 0xf5, 0xd0, 0x58, 0x68, 0xc1, 0x5b, 0x78, 0xef,
	0xf7, 0x4f, 0x7e, 0xff, 0x90, 0xfb, 0x9a, 0x67, 0x25, 0x60, 0xaa, 0x64, 0x09, 0x2a, 0xe0, 0x75,
	0x11, 0x1c, 0xa2, 0x20, 0xdb, 0xb5, 0x0d, 0x82, 0x62, 0xb5, 0x92, 0x28, 0xe9, 0x8d, 0x54, 0x82,
	0x9d, 0x62, 0xec, 0x10, 0xb9, 0x2b, 0x21, 0xa5, 0xd8, 0x41, 0x30, 0x20, 0x69, 0xfb, 0x1b, 0x60,
	0x51, 0x41, 0x83, 0xbc, 0xaa, 0x75, 0xca, 0x5d, 0x4d, 0x5d, 0x0c, 0xfb, 0xb6, 0x6a, 0x34, 0xf0,
	0xf0, 0x37, 0x23, 0x57, 0x6f, 0xfa, 0xa1, 0xf5, 0x67, 0xfc, 0x01, 0x1d, 0xbd, 0x25, 0x76, 0x09,
	0xdd, 0xa6, 0xc8, 0x1d, 0xc3, 0x33, 0xfc, 0x79, 0x62, 0x95, 0xd0, 0xc5, 0x39, 0xbd, 0x23, 0x64,
	0x14, 0xea, 0x57, 0xb3, 0x61, 0x35, 0x1f, 0x27, 0x71, 0x4e, 0x43, 0x62, 0xab, 0x42, 0x6c, 0xb1,
	0x71, 0x4c, 0xcf, 0xf4, 0x17, 0xa1, 0xcb, 0x26, 0x7c, 0x59, 0xd2, 0x23, 0xc9, 0x48, 0xd2, 0x77,
	0xb2, 0xe4, 0x2d, 0x6e, 0x61, 0x8f, 0x45, 0xc6, 0x11, 0xf2, 0x0d, 0x47, 0xe7, 0xc2, 0x33, 0xfc,
	0xcb, 0xd0, 0x65, 0xba, 0x18, 0x3b, 0x16, 0x63, 0xdf, 0xc7, 0x62, 0xc9, 0xf5, 0x59, 0x66, 0x8d,
	0x74, 0x49, 0xcc, 0x12, 0x3a, 0xc7, 0x1a, 0x94, 0xfa, 0x23, 0x7d, 0x26, 0x56, 0x83, 0x1c, 0xc1,
	0xb1, 0x3d, 0xc3, 0x5f, 0x84, 0xde, 0xa4, 0x8b, 0xae, 0xfb, 0xd5, 0x73, 0x89, 0xc6, 0x5f, 0x9f,
	0x7e, 0x1e, 0x85, 0x3c, 0x07, 0xa5, 0x12, 0xe3, 0xb7, 0xbd, 0x9c, 0xce, 0x53, 0x7b, 0x30, 0x8b,
	0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x96, 0xe2, 0x04, 0x7e, 0xba, 0x01, 0x00, 0x00,
}
