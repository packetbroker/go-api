// Copyright Â© 2021 The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.4
// source: packetbroker/api/reporting/v1/service.proto

package reportingpb

import (
	v3 "go.packetbroker.org/api/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonthYear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Calendar month (1 tot 12).
	Month uint32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`
	// Calendar year.
	Year uint32 `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *MonthYear) Reset() {
	*x = MonthYear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthYear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthYear) ProtoMessage() {}

func (x *MonthYear) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthYear.ProtoReflect.Descriptor instead.
func (*MonthYear) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *MonthYear) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *MonthYear) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type Today struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Today) Reset() {
	*x = Today{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Today) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Today) ProtoMessage() {}

func (x *Today) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Today.ProtoReflect.Descriptor instead.
func (*Today) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{1}
}

type Last30Days struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Last30Days) Reset() {
	*x = Last30Days{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Last30Days) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Last30Days) ProtoMessage() {}

func (x *Last30Days) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Last30Days.ProtoReflect.Descriptor instead.
func (*Last30Days) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{2}
}

type MonthPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// From month (inclusive).
	From *MonthYear `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// To month (inclusive).
	To *MonthYear `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *MonthPeriod) Reset() {
	*x = MonthPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthPeriod) ProtoMessage() {}

func (x *MonthPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthPeriod.ProtoReflect.Descriptor instead.
func (*MonthPeriod) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *MonthPeriod) GetFrom() *MonthYear {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *MonthPeriod) GetTo() *MonthYear {
	if x != nil {
		return x.To
	}
	return nil
}

type GetRoutedMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LoRa Alliance NetID of the Forwarder Member.
	// When unset, match any Forwarder.
	ForwarderNetId *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=forwarder_net_id,json=forwarderNetId,proto3" json:"forwarder_net_id,omitempty"`
	// Tenant ID managed by the Forwarder Member.
	// When unset, match any Forwarder tenant.
	ForwarderTenantId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=forwarder_tenant_id,json=forwarderTenantId,proto3" json:"forwarder_tenant_id,omitempty"`
	// LoRa Alliance NetID of the Home Network Member.
	// When unset, match any Home Network.
	HomeNetworkNetId *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=home_network_net_id,json=homeNetworkNetId,proto3" json:"home_network_net_id,omitempty"`
	// Tenant ID managed by the Home Network Member.
	// When unset, match any Home Network tenant.
	HomeNetworkTenantId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=home_network_tenant_id,json=homeNetworkTenantId,proto3" json:"home_network_tenant_id,omitempty"`
	// Types that are assignable to Time:
	//
	//	*GetRoutedMessagesRequest_Today
	//	*GetRoutedMessagesRequest_Last_30Days
	//	*GetRoutedMessagesRequest_Period
	Time isGetRoutedMessagesRequest_Time `protobuf_oneof:"time"`
}

func (x *GetRoutedMessagesRequest) Reset() {
	*x = GetRoutedMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutedMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutedMessagesRequest) ProtoMessage() {}

func (x *GetRoutedMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutedMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetRoutedMessagesRequest) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoutedMessagesRequest) GetForwarderNetId() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ForwarderNetId
	}
	return nil
}

func (x *GetRoutedMessagesRequest) GetForwarderTenantId() *wrapperspb.StringValue {
	if x != nil {
		return x.ForwarderTenantId
	}
	return nil
}

func (x *GetRoutedMessagesRequest) GetHomeNetworkNetId() *wrapperspb.UInt32Value {
	if x != nil {
		return x.HomeNetworkNetId
	}
	return nil
}

func (x *GetRoutedMessagesRequest) GetHomeNetworkTenantId() *wrapperspb.StringValue {
	if x != nil {
		return x.HomeNetworkTenantId
	}
	return nil
}

func (m *GetRoutedMessagesRequest) GetTime() isGetRoutedMessagesRequest_Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func (x *GetRoutedMessagesRequest) GetToday() *Today {
	if x, ok := x.GetTime().(*GetRoutedMessagesRequest_Today); ok {
		return x.Today
	}
	return nil
}

func (x *GetRoutedMessagesRequest) GetLast_30Days() *Last30Days {
	if x, ok := x.GetTime().(*GetRoutedMessagesRequest_Last_30Days); ok {
		return x.Last_30Days
	}
	return nil
}

func (x *GetRoutedMessagesRequest) GetPeriod() *MonthPeriod {
	if x, ok := x.GetTime().(*GetRoutedMessagesRequest_Period); ok {
		return x.Period
	}
	return nil
}

type isGetRoutedMessagesRequest_Time interface {
	isGetRoutedMessagesRequest_Time()
}

type GetRoutedMessagesRequest_Today struct {
	Today *Today `protobuf:"bytes,5,opt,name=today,proto3,oneof"`
}

type GetRoutedMessagesRequest_Last_30Days struct {
	Last_30Days *Last30Days `protobuf:"bytes,6,opt,name=last_30_days,json=last30Days,proto3,oneof"`
}

type GetRoutedMessagesRequest_Period struct {
	Period *MonthPeriod `protobuf:"bytes,7,opt,name=period,proto3,oneof"`
}

func (*GetRoutedMessagesRequest_Today) isGetRoutedMessagesRequest_Time() {}

func (*GetRoutedMessagesRequest_Last_30Days) isGetRoutedMessagesRequest_Time() {}

func (*GetRoutedMessagesRequest_Period) isGetRoutedMessagesRequest_Time() {}

type RoutedMessagesRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// End date that the time window applies to.
	// If the queried time is today, this contains the current date.
	// If the queried time is the last 30 days, this contains the last day.
	// If the queried time is a period in months, this contains the last day of the month this record applies to.
	To *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// LoRa Alliance NetID of the Forwarder Member.
	ForwarderNetId uint32 `protobuf:"varint,2,opt,name=forwarder_net_id,json=forwarderNetId,proto3" json:"forwarder_net_id,omitempty"`
	// Tenant ID managed by the Forwarder Member.
	ForwarderTenantId string `protobuf:"bytes,3,opt,name=forwarder_tenant_id,json=forwarderTenantId,proto3" json:"forwarder_tenant_id,omitempty"`
	// LoRa Alliance NetID of the Home Network Member.
	HomeNetworkNetId uint32 `protobuf:"varint,4,opt,name=home_network_net_id,json=homeNetworkNetId,proto3" json:"home_network_net_id,omitempty"`
	// Tenant ID managed by the Home Network Member.
	HomeNetworkTenantId string                         `protobuf:"bytes,5,opt,name=home_network_tenant_id,json=homeNetworkTenantId,proto3" json:"home_network_tenant_id,omitempty"`
	Uplink              *RoutedMessagesRecord_Uplink   `protobuf:"bytes,6,opt,name=uplink,proto3" json:"uplink,omitempty"`
	Downlink            *RoutedMessagesRecord_Downlink `protobuf:"bytes,7,opt,name=downlink,proto3" json:"downlink,omitempty"`
}

func (x *RoutedMessagesRecord) Reset() {
	*x = RoutedMessagesRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutedMessagesRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutedMessagesRecord) ProtoMessage() {}

func (x *RoutedMessagesRecord) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutedMessagesRecord.ProtoReflect.Descriptor instead.
func (*RoutedMessagesRecord) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *RoutedMessagesRecord) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *RoutedMessagesRecord) GetForwarderNetId() uint32 {
	if x != nil {
		return x.ForwarderNetId
	}
	return 0
}

func (x *RoutedMessagesRecord) GetForwarderTenantId() string {
	if x != nil {
		return x.ForwarderTenantId
	}
	return ""
}

func (x *RoutedMessagesRecord) GetHomeNetworkNetId() uint32 {
	if x != nil {
		return x.HomeNetworkNetId
	}
	return 0
}

func (x *RoutedMessagesRecord) GetHomeNetworkTenantId() string {
	if x != nil {
		return x.HomeNetworkTenantId
	}
	return ""
}

func (x *RoutedMessagesRecord) GetUplink() *RoutedMessagesRecord_Uplink {
	if x != nil {
		return x.Uplink
	}
	return nil
}

func (x *RoutedMessagesRecord) GetDownlink() *RoutedMessagesRecord_Downlink {
	if x != nil {
		return x.Downlink
	}
	return nil
}

type GetRoutedMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*RoutedMessagesRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetRoutedMessagesResponse) Reset() {
	*x = GetRoutedMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutedMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutedMessagesResponse) ProtoMessage() {}

func (x *GetRoutedMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutedMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetRoutedMessagesResponse) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoutedMessagesResponse) GetRecords() []*RoutedMessagesRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type RoutedMessagesRecord_Uplink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Count of join-requests that are routed by Packet Broker.
	JoinRequestsRoutedCount uint64 `protobuf:"varint,1,opt,name=join_requests_routed_count,json=joinRequestsRoutedCount,proto3" json:"join_requests_routed_count,omitempty"`
	// Count of join-requests processed successfully by the Home Network.
	JoinRequestsProcessedSuccessCount uint64 `protobuf:"varint,2,opt,name=join_requests_processed_success_count,json=joinRequestsProcessedSuccessCount,proto3" json:"join_requests_processed_success_count,omitempty"`
	// Count of join-requests processed with an error by the Home Network.
	JoinRequestsProcessedErrorCount []*RoutedMessagesRecord_Uplink_ErrorCount `protobuf:"bytes,3,rep,name=join_requests_processed_error_count,json=joinRequestsProcessedErrorCount,proto3" json:"join_requests_processed_error_count,omitempty"`
	// Count of data uplink messages that are routed by Packet Broker.
	DataMessagesRoutedCount uint64 `protobuf:"varint,4,opt,name=data_messages_routed_count,json=dataMessagesRoutedCount,proto3" json:"data_messages_routed_count,omitempty"`
	// Count of data uplink messages processed successfully by the Home Network.
	DataMessagesProcessedSuccessCount uint64 `protobuf:"varint,5,opt,name=data_messages_processed_success_count,json=dataMessagesProcessedSuccessCount,proto3" json:"data_messages_processed_success_count,omitempty"`
	// Count of data uplink messages processed with an error by the Home Network.
	DataMessagesProcessedErrorCount []*RoutedMessagesRecord_Uplink_ErrorCount `protobuf:"bytes,6,rep,name=data_messages_processed_error_count,json=dataMessagesProcessedErrorCount,proto3" json:"data_messages_processed_error_count,omitempty"`
}

func (x *RoutedMessagesRecord_Uplink) Reset() {
	*x = RoutedMessagesRecord_Uplink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutedMessagesRecord_Uplink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutedMessagesRecord_Uplink) ProtoMessage() {}

func (x *RoutedMessagesRecord_Uplink) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutedMessagesRecord_Uplink.ProtoReflect.Descriptor instead.
func (*RoutedMessagesRecord_Uplink) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *RoutedMessagesRecord_Uplink) GetJoinRequestsRoutedCount() uint64 {
	if x != nil {
		return x.JoinRequestsRoutedCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Uplink) GetJoinRequestsProcessedSuccessCount() uint64 {
	if x != nil {
		return x.JoinRequestsProcessedSuccessCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Uplink) GetJoinRequestsProcessedErrorCount() []*RoutedMessagesRecord_Uplink_ErrorCount {
	if x != nil {
		return x.JoinRequestsProcessedErrorCount
	}
	return nil
}

func (x *RoutedMessagesRecord_Uplink) GetDataMessagesRoutedCount() uint64 {
	if x != nil {
		return x.DataMessagesRoutedCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Uplink) GetDataMessagesProcessedSuccessCount() uint64 {
	if x != nil {
		return x.DataMessagesProcessedSuccessCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Uplink) GetDataMessagesProcessedErrorCount() []*RoutedMessagesRecord_Uplink_ErrorCount {
	if x != nil {
		return x.DataMessagesProcessedErrorCount
	}
	return nil
}

type RoutedMessagesRecord_Downlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Count of join-accepts that are routed by Packet Broker.
	JoinAcceptsRoutedCount uint64 `protobuf:"varint,1,opt,name=join_accepts_routed_count,json=joinAcceptsRoutedCount,proto3" json:"join_accepts_routed_count,omitempty"`
	// Count of join-accepts processed successfully by the Forwarder.
	JoinAcceptsProcessedSuccessCount uint64 `protobuf:"varint,2,opt,name=join_accepts_processed_success_count,json=joinAcceptsProcessedSuccessCount,proto3" json:"join_accepts_processed_success_count,omitempty"`
	// Count of join-accepts processed with an error by the Forwarder.
	JoinAcceptsProcessedErrorCount []*RoutedMessagesRecord_Downlink_ErrorCount `protobuf:"bytes,3,rep,name=join_accepts_processed_error_count,json=joinAcceptsProcessedErrorCount,proto3" json:"join_accepts_processed_error_count,omitempty"`
	// Count of data downlink messages that are routed by Packet Broker.
	DataMessagesRoutedCount uint64 `protobuf:"varint,4,opt,name=data_messages_routed_count,json=dataMessagesRoutedCount,proto3" json:"data_messages_routed_count,omitempty"`
	// Count of data downlink messages processed successfully by the Forwarder.
	DataMessagesProcessedSuccessCount uint64 `protobuf:"varint,5,opt,name=data_messages_processed_success_count,json=dataMessagesProcessedSuccessCount,proto3" json:"data_messages_processed_success_count,omitempty"`
	// Count of data downlink messages processed with an error by the Forwarder.
	DataMessagesProcessedErrorCount []*RoutedMessagesRecord_Downlink_ErrorCount `protobuf:"bytes,6,rep,name=data_messages_processed_error_count,json=dataMessagesProcessedErrorCount,proto3" json:"data_messages_processed_error_count,omitempty"`
}

func (x *RoutedMessagesRecord_Downlink) Reset() {
	*x = RoutedMessagesRecord_Downlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutedMessagesRecord_Downlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutedMessagesRecord_Downlink) ProtoMessage() {}

func (x *RoutedMessagesRecord_Downlink) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutedMessagesRecord_Downlink.ProtoReflect.Descriptor instead.
func (*RoutedMessagesRecord_Downlink) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{5, 1}
}

func (x *RoutedMessagesRecord_Downlink) GetJoinAcceptsRoutedCount() uint64 {
	if x != nil {
		return x.JoinAcceptsRoutedCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Downlink) GetJoinAcceptsProcessedSuccessCount() uint64 {
	if x != nil {
		return x.JoinAcceptsProcessedSuccessCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Downlink) GetJoinAcceptsProcessedErrorCount() []*RoutedMessagesRecord_Downlink_ErrorCount {
	if x != nil {
		return x.JoinAcceptsProcessedErrorCount
	}
	return nil
}

func (x *RoutedMessagesRecord_Downlink) GetDataMessagesRoutedCount() uint64 {
	if x != nil {
		return x.DataMessagesRoutedCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Downlink) GetDataMessagesProcessedSuccessCount() uint64 {
	if x != nil {
		return x.DataMessagesProcessedSuccessCount
	}
	return 0
}

func (x *RoutedMessagesRecord_Downlink) GetDataMessagesProcessedErrorCount() []*RoutedMessagesRecord_Downlink_ErrorCount {
	if x != nil {
		return x.DataMessagesProcessedErrorCount
	}
	return nil
}

type RoutedMessagesRecord_Uplink_ErrorCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType v3.UplinkMessageProcessingError `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=org.packetbroker.v3.UplinkMessageProcessingError" json:"error_type,omitempty"`
	Count     uint64                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RoutedMessagesRecord_Uplink_ErrorCount) Reset() {
	*x = RoutedMessagesRecord_Uplink_ErrorCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutedMessagesRecord_Uplink_ErrorCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutedMessagesRecord_Uplink_ErrorCount) ProtoMessage() {}

func (x *RoutedMessagesRecord_Uplink_ErrorCount) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutedMessagesRecord_Uplink_ErrorCount.ProtoReflect.Descriptor instead.
func (*RoutedMessagesRecord_Uplink_ErrorCount) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *RoutedMessagesRecord_Uplink_ErrorCount) GetErrorType() v3.UplinkMessageProcessingError {
	if x != nil {
		return x.ErrorType
	}
	return v3.UplinkMessageProcessingError(0)
}

func (x *RoutedMessagesRecord_Uplink_ErrorCount) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RoutedMessagesRecord_Downlink_ErrorCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType v3.DownlinkMessageProcessingError `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=org.packetbroker.v3.DownlinkMessageProcessingError" json:"error_type,omitempty"`
	Count     uint64                            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RoutedMessagesRecord_Downlink_ErrorCount) Reset() {
	*x = RoutedMessagesRecord_Downlink_ErrorCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutedMessagesRecord_Downlink_ErrorCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutedMessagesRecord_Downlink_ErrorCount) ProtoMessage() {}

func (x *RoutedMessagesRecord_Downlink_ErrorCount) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_reporting_v1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutedMessagesRecord_Downlink_ErrorCount.ProtoReflect.Descriptor instead.
func (*RoutedMessagesRecord_Downlink_ErrorCount) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *RoutedMessagesRecord_Downlink_ErrorCount) GetErrorType() v3.DownlinkMessageProcessingError {
	if x != nil {
		return x.ErrorType
	}
	return v3.DownlinkMessageProcessingError(0)
}

func (x *RoutedMessagesRecord_Downlink_ErrorCount) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_packetbroker_api_reporting_v1_service_proto protoreflect.FileDescriptor

var file_packetbroker_api_reporting_v1_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6f,
	0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x33, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35,
	0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x59, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x07, 0x0a, 0x05, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x22, 0x0c,
	0x0a, 0x0a, 0x4c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x0b, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x59, 0x65, 0x61, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x38, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x59, 0x65, 0x61, 0x72,
	0x52, 0x02, 0x74, 0x6f, 0x22, 0xab, 0x04, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x13, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x4d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x33, 0x30,
	0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x73, 0x74,
	0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0xc6, 0x0e, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e,
	0x6b, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x58, 0x0a, 0x08, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x1a, 0xc8, 0x05, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x3b,
	0x0a, 0x1a, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x17, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x25, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x21, 0x6a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x93, 0x01,
	0x0a, 0x23, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x1f, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x50, 0x0a, 0x25, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x21, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x23, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x1f, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x74, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33,
	0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xca,
	0x05, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x39, 0x0a, 0x19, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16,
	0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x24, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x20, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x22, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x1e, 0x6a, 0x6f,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x17, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x25, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x21, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x95, 0x01, 0x0a, 0x23,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x1f, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x76, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x52, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x32, 0x93, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x12, 0x86, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a,
	0x2d, 0x67, 0x6f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x3b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packetbroker_api_reporting_v1_service_proto_rawDescOnce sync.Once
	file_packetbroker_api_reporting_v1_service_proto_rawDescData = file_packetbroker_api_reporting_v1_service_proto_rawDesc
)

func file_packetbroker_api_reporting_v1_service_proto_rawDescGZIP() []byte {
	file_packetbroker_api_reporting_v1_service_proto_rawDescOnce.Do(func() {
		file_packetbroker_api_reporting_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_packetbroker_api_reporting_v1_service_proto_rawDescData)
	})
	return file_packetbroker_api_reporting_v1_service_proto_rawDescData
}

var file_packetbroker_api_reporting_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_packetbroker_api_reporting_v1_service_proto_goTypes = []interface{}{
	(*MonthYear)(nil),                                // 0: org.packetbroker.reporting.v1.MonthYear
	(*Today)(nil),                                    // 1: org.packetbroker.reporting.v1.Today
	(*Last30Days)(nil),                               // 2: org.packetbroker.reporting.v1.Last30Days
	(*MonthPeriod)(nil),                              // 3: org.packetbroker.reporting.v1.MonthPeriod
	(*GetRoutedMessagesRequest)(nil),                 // 4: org.packetbroker.reporting.v1.GetRoutedMessagesRequest
	(*RoutedMessagesRecord)(nil),                     // 5: org.packetbroker.reporting.v1.RoutedMessagesRecord
	(*GetRoutedMessagesResponse)(nil),                // 6: org.packetbroker.reporting.v1.GetRoutedMessagesResponse
	(*RoutedMessagesRecord_Uplink)(nil),              // 7: org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink
	(*RoutedMessagesRecord_Downlink)(nil),            // 8: org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink
	(*RoutedMessagesRecord_Uplink_ErrorCount)(nil),   // 9: org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink.ErrorCount
	(*RoutedMessagesRecord_Downlink_ErrorCount)(nil), // 10: org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink.ErrorCount
	(*wrapperspb.UInt32Value)(nil),                   // 11: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil),                   // 12: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),                    // 13: google.protobuf.Timestamp
	(v3.UplinkMessageProcessingError)(0),             // 14: org.packetbroker.v3.UplinkMessageProcessingError
	(v3.DownlinkMessageProcessingError)(0),           // 15: org.packetbroker.v3.DownlinkMessageProcessingError
}
var file_packetbroker_api_reporting_v1_service_proto_depIdxs = []int32{
	0,  // 0: org.packetbroker.reporting.v1.MonthPeriod.from:type_name -> org.packetbroker.reporting.v1.MonthYear
	0,  // 1: org.packetbroker.reporting.v1.MonthPeriod.to:type_name -> org.packetbroker.reporting.v1.MonthYear
	11, // 2: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.forwarder_net_id:type_name -> google.protobuf.UInt32Value
	12, // 3: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.forwarder_tenant_id:type_name -> google.protobuf.StringValue
	11, // 4: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.home_network_net_id:type_name -> google.protobuf.UInt32Value
	12, // 5: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.home_network_tenant_id:type_name -> google.protobuf.StringValue
	1,  // 6: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.today:type_name -> org.packetbroker.reporting.v1.Today
	2,  // 7: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.last_30_days:type_name -> org.packetbroker.reporting.v1.Last30Days
	3,  // 8: org.packetbroker.reporting.v1.GetRoutedMessagesRequest.period:type_name -> org.packetbroker.reporting.v1.MonthPeriod
	13, // 9: org.packetbroker.reporting.v1.RoutedMessagesRecord.to:type_name -> google.protobuf.Timestamp
	7,  // 10: org.packetbroker.reporting.v1.RoutedMessagesRecord.uplink:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink
	8,  // 11: org.packetbroker.reporting.v1.RoutedMessagesRecord.downlink:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink
	5,  // 12: org.packetbroker.reporting.v1.GetRoutedMessagesResponse.records:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord
	9,  // 13: org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink.join_requests_processed_error_count:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink.ErrorCount
	9,  // 14: org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink.data_messages_processed_error_count:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink.ErrorCount
	10, // 15: org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink.join_accepts_processed_error_count:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink.ErrorCount
	10, // 16: org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink.data_messages_processed_error_count:type_name -> org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink.ErrorCount
	14, // 17: org.packetbroker.reporting.v1.RoutedMessagesRecord.Uplink.ErrorCount.error_type:type_name -> org.packetbroker.v3.UplinkMessageProcessingError
	15, // 18: org.packetbroker.reporting.v1.RoutedMessagesRecord.Downlink.ErrorCount.error_type:type_name -> org.packetbroker.v3.DownlinkMessageProcessingError
	4,  // 19: org.packetbroker.reporting.v1.Reporter.GetRoutedMessages:input_type -> org.packetbroker.reporting.v1.GetRoutedMessagesRequest
	6,  // 20: org.packetbroker.reporting.v1.Reporter.GetRoutedMessages:output_type -> org.packetbroker.reporting.v1.GetRoutedMessagesResponse
	20, // [20:21] is the sub-list for method output_type
	19, // [19:20] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_packetbroker_api_reporting_v1_service_proto_init() }
func file_packetbroker_api_reporting_v1_service_proto_init() {
	if File_packetbroker_api_reporting_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthYear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Today); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Last30Days); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutedMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutedMessagesRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutedMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutedMessagesRecord_Uplink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutedMessagesRecord_Downlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutedMessagesRecord_Uplink_ErrorCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_reporting_v1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutedMessagesRecord_Downlink_ErrorCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packetbroker_api_reporting_v1_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetRoutedMessagesRequest_Today)(nil),
		(*GetRoutedMessagesRequest_Last_30Days)(nil),
		(*GetRoutedMessagesRequest_Period)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packetbroker_api_reporting_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_packetbroker_api_reporting_v1_service_proto_goTypes,
		DependencyIndexes: file_packetbroker_api_reporting_v1_service_proto_depIdxs,
		MessageInfos:      file_packetbroker_api_reporting_v1_service_proto_msgTypes,
	}.Build()
	File_packetbroker_api_reporting_v1_service_proto = out.File
	file_packetbroker_api_reporting_v1_service_proto_rawDesc = nil
	file_packetbroker_api_reporting_v1_service_proto_goTypes = nil
	file_packetbroker_api_reporting_v1_service_proto_depIdxs = nil
}
