// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: packetbroker/api/iam/v1/service.proto

package iampb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	v3 "go.packetbroker.org/api/v3"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DevAddrBlocksValue struct {
	Value                []*v3.DevAddrBlock `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DevAddrBlocksValue) Reset()         { *m = DevAddrBlocksValue{} }
func (m *DevAddrBlocksValue) String() string { return proto.CompactTextString(m) }
func (*DevAddrBlocksValue) ProtoMessage()    {}
func (*DevAddrBlocksValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{0}
}
func (m *DevAddrBlocksValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevAddrBlocksValue.Unmarshal(m, b)
}
func (m *DevAddrBlocksValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevAddrBlocksValue.Marshal(b, m, deterministic)
}
func (m *DevAddrBlocksValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevAddrBlocksValue.Merge(m, src)
}
func (m *DevAddrBlocksValue) XXX_Size() int {
	return xxx_messageInfo_DevAddrBlocksValue.Size(m)
}
func (m *DevAddrBlocksValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DevAddrBlocksValue.DiscardUnknown(m)
}

var xxx_messageInfo_DevAddrBlocksValue proto.InternalMessageInfo

func (m *DevAddrBlocksValue) GetValue() []*v3.DevAddrBlock {
	if m != nil {
		return m.Value
	}
	return nil
}

type ListNetworksRequest struct {
	// Number of items to skip.
	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// Limit the number of items.
	// If 0, use the server's default.
	// The actual limit may be capped by the server.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Filter networks by name.
	NameContains         string   `protobuf:"bytes,3,opt,name=name_contains,json=nameContains,proto3" json:"name_contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworksRequest) Reset()         { *m = ListNetworksRequest{} }
func (m *ListNetworksRequest) String() string { return proto.CompactTextString(m) }
func (*ListNetworksRequest) ProtoMessage()    {}
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{1}
}
func (m *ListNetworksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksRequest.Unmarshal(m, b)
}
func (m *ListNetworksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksRequest.Marshal(b, m, deterministic)
}
func (m *ListNetworksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksRequest.Merge(m, src)
}
func (m *ListNetworksRequest) XXX_Size() int {
	return xxx_messageInfo_ListNetworksRequest.Size(m)
}
func (m *ListNetworksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksRequest proto.InternalMessageInfo

func (m *ListNetworksRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNetworksRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListNetworksRequest) GetNameContains() string {
	if m != nil {
		return m.NameContains
	}
	return ""
}

type ListNetworksResponse struct {
	Networks []*v3.Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	// Total number of networks.
	Total                uint32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworksResponse) Reset()         { *m = ListNetworksResponse{} }
func (m *ListNetworksResponse) String() string { return proto.CompactTextString(m) }
func (*ListNetworksResponse) ProtoMessage()    {}
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{2}
}
func (m *ListNetworksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksResponse.Unmarshal(m, b)
}
func (m *ListNetworksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksResponse.Marshal(b, m, deterministic)
}
func (m *ListNetworksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksResponse.Merge(m, src)
}
func (m *ListNetworksResponse) XXX_Size() int {
	return xxx_messageInfo_ListNetworksResponse.Size(m)
}
func (m *ListNetworksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksResponse proto.InternalMessageInfo

func (m *ListNetworksResponse) GetNetworks() []*v3.Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *ListNetworksResponse) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type CreateNetworkRequest struct {
	Network              *v3.Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateNetworkRequest) Reset()         { *m = CreateNetworkRequest{} }
func (m *CreateNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkRequest) ProtoMessage()    {}
func (*CreateNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{3}
}
func (m *CreateNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkRequest.Unmarshal(m, b)
}
func (m *CreateNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkRequest.Marshal(b, m, deterministic)
}
func (m *CreateNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkRequest.Merge(m, src)
}
func (m *CreateNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkRequest.Size(m)
}
func (m *CreateNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkRequest proto.InternalMessageInfo

func (m *CreateNetworkRequest) GetNetwork() *v3.Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type CreateNetworkResponse struct {
	Network              *v3.Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateNetworkResponse) Reset()         { *m = CreateNetworkResponse{} }
func (m *CreateNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkResponse) ProtoMessage()    {}
func (*CreateNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{4}
}
func (m *CreateNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkResponse.Unmarshal(m, b)
}
func (m *CreateNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkResponse.Marshal(b, m, deterministic)
}
func (m *CreateNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkResponse.Merge(m, src)
}
func (m *CreateNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkResponse.Size(m)
}
func (m *CreateNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkResponse proto.InternalMessageInfo

func (m *CreateNetworkResponse) GetNetwork() *v3.Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type GetNetworkResponse struct {
	Network              *v3.Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetNetworkResponse) Reset()         { *m = GetNetworkResponse{} }
func (m *GetNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkResponse) ProtoMessage()    {}
func (*GetNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{5}
}
func (m *GetNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkResponse.Unmarshal(m, b)
}
func (m *GetNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkResponse.Marshal(b, m, deterministic)
}
func (m *GetNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkResponse.Merge(m, src)
}
func (m *GetNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkResponse.Size(m)
}
func (m *GetNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkResponse proto.InternalMessageInfo

func (m *GetNetworkResponse) GetNetwork() *v3.Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type NetworkRequest struct {
	NetId                uint32   `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkRequest) Reset()         { *m = NetworkRequest{} }
func (m *NetworkRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkRequest) ProtoMessage()    {}
func (*NetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{6}
}
func (m *NetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkRequest.Unmarshal(m, b)
}
func (m *NetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkRequest.Marshal(b, m, deterministic)
}
func (m *NetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkRequest.Merge(m, src)
}
func (m *NetworkRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkRequest.Size(m)
}
func (m *NetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkRequest proto.InternalMessageInfo

func (m *NetworkRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

type TargetValue struct {
	Value                *v3.Target `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TargetValue) Reset()         { *m = TargetValue{} }
func (m *TargetValue) String() string { return proto.CompactTextString(m) }
func (*TargetValue) ProtoMessage()    {}
func (*TargetValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{7}
}
func (m *TargetValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetValue.Unmarshal(m, b)
}
func (m *TargetValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetValue.Marshal(b, m, deterministic)
}
func (m *TargetValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetValue.Merge(m, src)
}
func (m *TargetValue) XXX_Size() int {
	return xxx_messageInfo_TargetValue.Size(m)
}
func (m *TargetValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetValue.DiscardUnknown(m)
}

var xxx_messageInfo_TargetValue proto.InternalMessageInfo

func (m *TargetValue) GetValue() *v3.Target {
	if m != nil {
		return m.Value
	}
	return nil
}

type UpdateNetworkRequest struct {
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// Name of the tenant.
	// This field gets updated when a value is set.
	Name *types.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// DevAddr blocks of the tenant.
	// This field gets updated when a value is set.
	DevAddrBlocks *DevAddrBlocksValue `protobuf:"bytes,3,opt,name=dev_addr_blocks,json=devAddrBlocks,proto3" json:"dev_addr_blocks,omitempty"`
	// Administrative contact.
	// This field gets updated when a value is set.
	AdministrativeContact *v3.ContactInfoValue `protobuf:"bytes,4,opt,name=administrative_contact,json=administrativeContact,proto3" json:"administrative_contact,omitempty"`
	// Technical contact.
	// This field gets updated when a value is set.
	TechnicalContact *v3.ContactInfoValue `protobuf:"bytes,5,opt,name=technical_contact,json=technicalContact,proto3" json:"technical_contact,omitempty"`
	// Indicates whether the network is listed in the catalog.
	// This field gets updated when a value is set.
	Listed *types.BoolValue `protobuf:"bytes,6,opt,name=listed,proto3" json:"listed,omitempty"`
	// Target information.
	// This field gets updated when a value is set.
	Target               *TargetValue `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateNetworkRequest) Reset()         { *m = UpdateNetworkRequest{} }
func (m *UpdateNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNetworkRequest) ProtoMessage()    {}
func (*UpdateNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{8}
}
func (m *UpdateNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNetworkRequest.Unmarshal(m, b)
}
func (m *UpdateNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNetworkRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNetworkRequest.Merge(m, src)
}
func (m *UpdateNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNetworkRequest.Size(m)
}
func (m *UpdateNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNetworkRequest proto.InternalMessageInfo

func (m *UpdateNetworkRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *UpdateNetworkRequest) GetName() *types.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateNetworkRequest) GetDevAddrBlocks() *DevAddrBlocksValue {
	if m != nil {
		return m.DevAddrBlocks
	}
	return nil
}

func (m *UpdateNetworkRequest) GetAdministrativeContact() *v3.ContactInfoValue {
	if m != nil {
		return m.AdministrativeContact
	}
	return nil
}

func (m *UpdateNetworkRequest) GetTechnicalContact() *v3.ContactInfoValue {
	if m != nil {
		return m.TechnicalContact
	}
	return nil
}

func (m *UpdateNetworkRequest) GetListed() *types.BoolValue {
	if m != nil {
		return m.Listed
	}
	return nil
}

func (m *UpdateNetworkRequest) GetTarget() *TargetValue {
	if m != nil {
		return m.Target
	}
	return nil
}

type ListTenantsRequest struct {
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// Number of items to skip.
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Limit the number of items.
	// If 0, use the server's default.
	// The actual limit may be capped by the server.
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Filter tenants by ID.
	TenantIdContains string `protobuf:"bytes,4,opt,name=tenant_id_contains,json=tenantIdContains,proto3" json:"tenant_id_contains,omitempty"`
	// Filter networks by name.
	NameContains         string   `protobuf:"bytes,5,opt,name=name_contains,json=nameContains,proto3" json:"name_contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTenantsRequest) Reset()         { *m = ListTenantsRequest{} }
func (m *ListTenantsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTenantsRequest) ProtoMessage()    {}
func (*ListTenantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{9}
}
func (m *ListTenantsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTenantsRequest.Unmarshal(m, b)
}
func (m *ListTenantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTenantsRequest.Marshal(b, m, deterministic)
}
func (m *ListTenantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTenantsRequest.Merge(m, src)
}
func (m *ListTenantsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTenantsRequest.Size(m)
}
func (m *ListTenantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTenantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTenantsRequest proto.InternalMessageInfo

func (m *ListTenantsRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *ListTenantsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListTenantsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTenantsRequest) GetTenantIdContains() string {
	if m != nil {
		return m.TenantIdContains
	}
	return ""
}

func (m *ListTenantsRequest) GetNameContains() string {
	if m != nil {
		return m.NameContains
	}
	return ""
}

type ListTenantsResponse struct {
	Tenants []*v3.Tenant `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
	// Total number of tenants.
	Total                uint32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTenantsResponse) Reset()         { *m = ListTenantsResponse{} }
func (m *ListTenantsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTenantsResponse) ProtoMessage()    {}
func (*ListTenantsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{10}
}
func (m *ListTenantsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTenantsResponse.Unmarshal(m, b)
}
func (m *ListTenantsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTenantsResponse.Marshal(b, m, deterministic)
}
func (m *ListTenantsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTenantsResponse.Merge(m, src)
}
func (m *ListTenantsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTenantsResponse.Size(m)
}
func (m *ListTenantsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTenantsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTenantsResponse proto.InternalMessageInfo

func (m *ListTenantsResponse) GetTenants() []*v3.Tenant {
	if m != nil {
		return m.Tenants
	}
	return nil
}

func (m *ListTenantsResponse) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type CreateTenantRequest struct {
	Tenant               *v3.Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTenantRequest) Reset()         { *m = CreateTenantRequest{} }
func (m *CreateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTenantRequest) ProtoMessage()    {}
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{11}
}
func (m *CreateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantRequest.Unmarshal(m, b)
}
func (m *CreateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantRequest.Marshal(b, m, deterministic)
}
func (m *CreateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantRequest.Merge(m, src)
}
func (m *CreateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTenantRequest.Size(m)
}
func (m *CreateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantRequest proto.InternalMessageInfo

func (m *CreateTenantRequest) GetTenant() *v3.Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

type CreateTenantResponse struct {
	Tenant               *v3.Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTenantResponse) Reset()         { *m = CreateTenantResponse{} }
func (m *CreateTenantResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTenantResponse) ProtoMessage()    {}
func (*CreateTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{12}
}
func (m *CreateTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantResponse.Unmarshal(m, b)
}
func (m *CreateTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantResponse.Marshal(b, m, deterministic)
}
func (m *CreateTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantResponse.Merge(m, src)
}
func (m *CreateTenantResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTenantResponse.Size(m)
}
func (m *CreateTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantResponse proto.InternalMessageInfo

func (m *CreateTenantResponse) GetTenant() *v3.Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

type TenantRequest struct {
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// ID assigned by the Member.
	TenantId             string   `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantRequest) Reset()         { *m = TenantRequest{} }
func (m *TenantRequest) String() string { return proto.CompactTextString(m) }
func (*TenantRequest) ProtoMessage()    {}
func (*TenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{13}
}
func (m *TenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantRequest.Unmarshal(m, b)
}
func (m *TenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantRequest.Marshal(b, m, deterministic)
}
func (m *TenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantRequest.Merge(m, src)
}
func (m *TenantRequest) XXX_Size() int {
	return xxx_messageInfo_TenantRequest.Size(m)
}
func (m *TenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TenantRequest proto.InternalMessageInfo

func (m *TenantRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *TenantRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type GetTenantResponse struct {
	Tenant               *v3.Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetTenantResponse) Reset()         { *m = GetTenantResponse{} }
func (m *GetTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetTenantResponse) ProtoMessage()    {}
func (*GetTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{14}
}
func (m *GetTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTenantResponse.Unmarshal(m, b)
}
func (m *GetTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTenantResponse.Marshal(b, m, deterministic)
}
func (m *GetTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTenantResponse.Merge(m, src)
}
func (m *GetTenantResponse) XXX_Size() int {
	return xxx_messageInfo_GetTenantResponse.Size(m)
}
func (m *GetTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTenantResponse proto.InternalMessageInfo

func (m *GetTenantResponse) GetTenant() *v3.Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

type UpdateTenantRequest struct {
	// LoRa Alliance NetID of the Member.
	// This field gets updated when a value is set.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// ID assigned by the Member.
	// This field gets updated when a value is set.
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Name of the tenant.
	// This field gets updated when a value is set.
	Name *types.StringValue `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// DevAddr blocks of the tenant.
	// This field gets updated when a value is set.
	DevAddrBlocks *DevAddrBlocksValue `protobuf:"bytes,4,opt,name=dev_addr_blocks,json=devAddrBlocks,proto3" json:"dev_addr_blocks,omitempty"`
	// Administrative contact.
	// This field gets updated when a value is set.
	AdministrativeContact *v3.ContactInfoValue `protobuf:"bytes,5,opt,name=administrative_contact,json=administrativeContact,proto3" json:"administrative_contact,omitempty"`
	// Technical contact.
	// This field gets updated when a value is set.
	TechnicalContact *v3.ContactInfoValue `protobuf:"bytes,6,opt,name=technical_contact,json=technicalContact,proto3" json:"technical_contact,omitempty"`
	// Indicates whether the tenant is listed in the catalog.
	// This field gets updated when a value is set.
	Listed *types.BoolValue `protobuf:"bytes,7,opt,name=listed,proto3" json:"listed,omitempty"`
	// Target information.
	// This field gets updated when a value is set.
	Target               *TargetValue `protobuf:"bytes,8,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateTenantRequest) Reset()         { *m = UpdateTenantRequest{} }
func (m *UpdateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTenantRequest) ProtoMessage()    {}
func (*UpdateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{15}
}
func (m *UpdateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTenantRequest.Unmarshal(m, b)
}
func (m *UpdateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTenantRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTenantRequest.Merge(m, src)
}
func (m *UpdateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTenantRequest.Size(m)
}
func (m *UpdateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTenantRequest proto.InternalMessageInfo

func (m *UpdateTenantRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *UpdateTenantRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *UpdateTenantRequest) GetName() *types.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateTenantRequest) GetDevAddrBlocks() *DevAddrBlocksValue {
	if m != nil {
		return m.DevAddrBlocks
	}
	return nil
}

func (m *UpdateTenantRequest) GetAdministrativeContact() *v3.ContactInfoValue {
	if m != nil {
		return m.AdministrativeContact
	}
	return nil
}

func (m *UpdateTenantRequest) GetTechnicalContact() *v3.ContactInfoValue {
	if m != nil {
		return m.TechnicalContact
	}
	return nil
}

func (m *UpdateTenantRequest) GetListed() *types.BoolValue {
	if m != nil {
		return m.Listed
	}
	return nil
}

func (m *UpdateTenantRequest) GetTarget() *TargetValue {
	if m != nil {
		return m.Target
	}
	return nil
}

type ListAPIKeysRequest struct {
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// ID assigned by the Member (optional).
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Cluster of the Member (optional).
	ClusterId            string   `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAPIKeysRequest) Reset()         { *m = ListAPIKeysRequest{} }
func (m *ListAPIKeysRequest) String() string { return proto.CompactTextString(m) }
func (*ListAPIKeysRequest) ProtoMessage()    {}
func (*ListAPIKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{16}
}
func (m *ListAPIKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAPIKeysRequest.Unmarshal(m, b)
}
func (m *ListAPIKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAPIKeysRequest.Marshal(b, m, deterministic)
}
func (m *ListAPIKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPIKeysRequest.Merge(m, src)
}
func (m *ListAPIKeysRequest) XXX_Size() int {
	return xxx_messageInfo_ListAPIKeysRequest.Size(m)
}
func (m *ListAPIKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPIKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPIKeysRequest proto.InternalMessageInfo

func (m *ListAPIKeysRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *ListAPIKeysRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ListAPIKeysRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type ListAPIKeysResponse struct {
	Keys                 []*v3.NetworkAPIKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListAPIKeysResponse) Reset()         { *m = ListAPIKeysResponse{} }
func (m *ListAPIKeysResponse) String() string { return proto.CompactTextString(m) }
func (*ListAPIKeysResponse) ProtoMessage()    {}
func (*ListAPIKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{17}
}
func (m *ListAPIKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAPIKeysResponse.Unmarshal(m, b)
}
func (m *ListAPIKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAPIKeysResponse.Marshal(b, m, deterministic)
}
func (m *ListAPIKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPIKeysResponse.Merge(m, src)
}
func (m *ListAPIKeysResponse) XXX_Size() int {
	return xxx_messageInfo_ListAPIKeysResponse.Size(m)
}
func (m *ListAPIKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPIKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPIKeysResponse proto.InternalMessageInfo

func (m *ListAPIKeysResponse) GetKeys() []*v3.NetworkAPIKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CreateAPIKeyRequest struct {
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// ID assigned by the Member (optional).
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Cluster of the Member (optional).
	ClusterId            string   `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAPIKeyRequest) Reset()         { *m = CreateAPIKeyRequest{} }
func (m *CreateAPIKeyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAPIKeyRequest) ProtoMessage()    {}
func (*CreateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{18}
}
func (m *CreateAPIKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAPIKeyRequest.Unmarshal(m, b)
}
func (m *CreateAPIKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAPIKeyRequest.Marshal(b, m, deterministic)
}
func (m *CreateAPIKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAPIKeyRequest.Merge(m, src)
}
func (m *CreateAPIKeyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAPIKeyRequest.Size(m)
}
func (m *CreateAPIKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAPIKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAPIKeyRequest proto.InternalMessageInfo

func (m *CreateAPIKeyRequest) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *CreateAPIKeyRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *CreateAPIKeyRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type APIKeyRequest struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIKeyRequest) Reset()         { *m = APIKeyRequest{} }
func (m *APIKeyRequest) String() string { return proto.CompactTextString(m) }
func (*APIKeyRequest) ProtoMessage()    {}
func (*APIKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{19}
}
func (m *APIKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIKeyRequest.Unmarshal(m, b)
}
func (m *APIKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIKeyRequest.Marshal(b, m, deterministic)
}
func (m *APIKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIKeyRequest.Merge(m, src)
}
func (m *APIKeyRequest) XXX_Size() int {
	return xxx_messageInfo_APIKeyRequest.Size(m)
}
func (m *APIKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_APIKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_APIKeyRequest proto.InternalMessageInfo

func (m *APIKeyRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type CreateAPIKeyResponse struct {
	Key                  *v3.NetworkAPIKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateAPIKeyResponse) Reset()         { *m = CreateAPIKeyResponse{} }
func (m *CreateAPIKeyResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAPIKeyResponse) ProtoMessage()    {}
func (*CreateAPIKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb4c3db227ceef8f, []int{20}
}
func (m *CreateAPIKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAPIKeyResponse.Unmarshal(m, b)
}
func (m *CreateAPIKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAPIKeyResponse.Marshal(b, m, deterministic)
}
func (m *CreateAPIKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAPIKeyResponse.Merge(m, src)
}
func (m *CreateAPIKeyResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAPIKeyResponse.Size(m)
}
func (m *CreateAPIKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAPIKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAPIKeyResponse proto.InternalMessageInfo

func (m *CreateAPIKeyResponse) GetKey() *v3.NetworkAPIKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func init() {
	proto.RegisterType((*DevAddrBlocksValue)(nil), "org.packetbroker.iam.v1.DevAddrBlocksValue")
	proto.RegisterType((*ListNetworksRequest)(nil), "org.packetbroker.iam.v1.ListNetworksRequest")
	proto.RegisterType((*ListNetworksResponse)(nil), "org.packetbroker.iam.v1.ListNetworksResponse")
	proto.RegisterType((*CreateNetworkRequest)(nil), "org.packetbroker.iam.v1.CreateNetworkRequest")
	proto.RegisterType((*CreateNetworkResponse)(nil), "org.packetbroker.iam.v1.CreateNetworkResponse")
	proto.RegisterType((*GetNetworkResponse)(nil), "org.packetbroker.iam.v1.GetNetworkResponse")
	proto.RegisterType((*NetworkRequest)(nil), "org.packetbroker.iam.v1.NetworkRequest")
	proto.RegisterType((*TargetValue)(nil), "org.packetbroker.iam.v1.TargetValue")
	proto.RegisterType((*UpdateNetworkRequest)(nil), "org.packetbroker.iam.v1.UpdateNetworkRequest")
	proto.RegisterType((*ListTenantsRequest)(nil), "org.packetbroker.iam.v1.ListTenantsRequest")
	proto.RegisterType((*ListTenantsResponse)(nil), "org.packetbroker.iam.v1.ListTenantsResponse")
	proto.RegisterType((*CreateTenantRequest)(nil), "org.packetbroker.iam.v1.CreateTenantRequest")
	proto.RegisterType((*CreateTenantResponse)(nil), "org.packetbroker.iam.v1.CreateTenantResponse")
	proto.RegisterType((*TenantRequest)(nil), "org.packetbroker.iam.v1.TenantRequest")
	proto.RegisterType((*GetTenantResponse)(nil), "org.packetbroker.iam.v1.GetTenantResponse")
	proto.RegisterType((*UpdateTenantRequest)(nil), "org.packetbroker.iam.v1.UpdateTenantRequest")
	proto.RegisterType((*ListAPIKeysRequest)(nil), "org.packetbroker.iam.v1.ListAPIKeysRequest")
	proto.RegisterType((*ListAPIKeysResponse)(nil), "org.packetbroker.iam.v1.ListAPIKeysResponse")
	proto.RegisterType((*CreateAPIKeyRequest)(nil), "org.packetbroker.iam.v1.CreateAPIKeyRequest")
	proto.RegisterType((*APIKeyRequest)(nil), "org.packetbroker.iam.v1.APIKeyRequest")
	proto.RegisterType((*CreateAPIKeyResponse)(nil), "org.packetbroker.iam.v1.CreateAPIKeyResponse")
}

func init() {
	proto.RegisterFile("packetbroker/api/iam/v1/service.proto", fileDescriptor_eb4c3db227ceef8f)
}

var fileDescriptor_eb4c3db227ceef8f = []byte{
	// 1068 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x49, 0x6f, 0xdb, 0x46,
	0x14, 0x86, 0xac, 0xc5, 0xd6, 0x93, 0x94, 0x65, 0xbc, 0x54, 0x90, 0xdb, 0xc2, 0x66, 0x9a, 0xc4,
	0x68, 0x1c, 0xaa, 0x96, 0xbb, 0x01, 0xed, 0xa1, 0xb1, 0x53, 0xa4, 0x6a, 0x1c, 0x37, 0x60, 0x5c,
	0x1f, 0x8a, 0x02, 0xc2, 0x48, 0x1c, 0xd1, 0x04, 0x29, 0x92, 0x25, 0x47, 0x0c, 0xf4, 0x9f, 0x7a,
	0xec, 0x8f, 0xe9, 0xaf, 0xe8, 0xa9, 0xc7, 0x1e, 0x0a, 0xce, 0x42, 0x91, 0x12, 0x29, 0x29, 0x5e,
	0x6e, 0xe6, 0xcc, 0xf7, 0xf6, 0xf7, 0xbe, 0x79, 0x16, 0x3c, 0xf6, 0xf0, 0xc0, 0x22, 0xb4, 0xef,
	0xbb, 0x16, 0xf1, 0xdb, 0xd8, 0x33, 0xdb, 0x26, 0x1e, 0xb5, 0xc3, 0xa3, 0x76, 0x40, 0xfc, 0xd0,
	0x1c, 0x10, 0xd5, 0xf3, 0x5d, 0xea, 0xa2, 0x8f, 0x5c, 0xdf, 0x50, 0x93, 0x50, 0xd5, 0xc4, 0x23,
	0x35, 0x3c, 0x6a, 0xed, 0x1a, 0xae, 0x6b, 0xd8, 0xa4, 0xcd, 0x60, 0xfd, 0xf1, 0xb0, 0x4d, 0x46,
	0x1e, 0x9d, 0x70, 0xa9, 0xd6, 0xa7, 0xb3, 0x97, 0xef, 0x7d, 0xec, 0x79, 0xc4, 0x0f, 0xc4, 0xfd,
	0xfe, 0x9c, 0xf1, 0xf0, 0xb8, 0x3d, 0x70, 0x1d, 0x8a, 0x07, 0x74, 0x11, 0xc4, 0x21, 0xf4, 0xbd,
	0xeb, 0x5b, 0x02, 0xb2, 0x97, 0x05, 0xa1, 0xd8, 0x37, 0x88, 0x50, 0xa2, 0xbc, 0x01, 0xf4, 0x92,
	0x84, 0x2f, 0x74, 0xdd, 0x3f, 0xb1, 0xdd, 0x81, 0x15, 0x5c, 0x62, 0x7b, 0x4c, 0xd0, 0x37, 0x50,
	0x0e, 0xa3, 0x3f, 0x9a, 0x85, 0xbd, 0xe2, 0x41, 0xad, 0xb3, 0xaf, 0xce, 0xc5, 0x18, 0x1e, 0xab,
	0x49, 0x39, 0x8d, 0xe3, 0x95, 0x2b, 0xd8, 0x3c, 0x33, 0x03, 0x7a, 0xce, 0xbd, 0x08, 0x34, 0xf2,
	0xc7, 0x98, 0x04, 0x14, 0xed, 0x40, 0xc5, 0x1d, 0x0e, 0x03, 0x42, 0x9b, 0x85, 0xbd, 0xc2, 0x41,
	0x43, 0x13, 0x5f, 0x68, 0x0b, 0xca, 0xb6, 0x39, 0x32, 0x69, 0x73, 0x8d, 0x1d, 0xf3, 0x0f, 0xf4,
	0x08, 0x1a, 0x0e, 0x1e, 0x91, 0x1e, 0x0b, 0xd7, 0x74, 0x82, 0x66, 0x71, 0xaf, 0x70, 0x50, 0xd5,
	0xea, 0xd1, 0xe1, 0xa9, 0x38, 0x53, 0x86, 0xb0, 0x95, 0xb6, 0x14, 0x78, 0xae, 0x13, 0x10, 0xf4,
	0x2d, 0x6c, 0x88, 0x1c, 0x04, 0xc2, 0xfb, 0x8f, 0x33, 0xbd, 0x17, 0x82, 0x5a, 0x8c, 0x8e, 0x9c,
	0xa1, 0x2e, 0xc5, 0xb6, 0x74, 0x86, 0x7d, 0x28, 0xe7, 0xb0, 0x75, 0xea, 0x13, 0x4c, 0x89, 0x14,
	0x10, 0x21, 0x7d, 0x0d, 0xeb, 0x42, 0x92, 0xc5, 0xb4, 0xcc, 0x8c, 0x04, 0x2b, 0xbf, 0xc0, 0xf6,
	0x8c, 0x3e, 0xe1, 0xf8, 0x75, 0x15, 0x9e, 0x01, 0x7a, 0x45, 0xe8, 0x6d, 0x69, 0x7b, 0x0a, 0xf7,
	0x66, 0x02, 0xdd, 0x86, 0x8a, 0x43, 0x68, 0xcf, 0xd4, 0x45, 0xed, 0xca, 0x0e, 0xa1, 0x5d, 0x5d,
	0xf9, 0x01, 0x6a, 0x17, 0xac, 0x91, 0x78, 0xc7, 0x1c, 0x4d, 0x3b, 0x26, 0xb2, 0xb6, 0x9b, 0x69,
	0x8d, 0x0b, 0xc8, 0x5e, 0xf9, 0xbb, 0x08, 0x5b, 0xbf, 0x7a, 0xfa, 0x7c, 0x6a, 0xb3, 0x2d, 0xa2,
	0x2f, 0xa0, 0x14, 0x75, 0x00, 0x2b, 0x4f, 0x14, 0x0f, 0x9f, 0x20, 0x55, 0x4e, 0x90, 0xfa, 0x8e,
	0xfa, 0xa6, 0x63, 0x30, 0x77, 0x34, 0x86, 0x44, 0xef, 0xe0, 0xbe, 0x4e, 0xc2, 0x1e, 0xd6, 0x75,
	0xbf, 0xd7, 0x67, 0xed, 0xcd, 0x5a, 0xa9, 0xd6, 0x79, 0xa6, 0xe6, 0x0c, 0xad, 0x3a, 0x3f, 0x0c,
	0x5a, 0x43, 0x4f, 0x9e, 0xa1, 0xdf, 0x61, 0x07, 0xeb, 0x23, 0xd3, 0x31, 0x03, 0xea, 0x63, 0x6a,
	0x86, 0xa2, 0x4f, 0x07, 0xb4, 0x59, 0x62, 0xba, 0x1f, 0x67, 0x86, 0x7e, 0xca, 0x31, 0x5d, 0x67,
	0xe8, 0x72, 0xad, 0xdb, 0x69, 0x25, 0xe2, 0x1e, 0x69, 0xf0, 0x90, 0x92, 0xc1, 0x95, 0x63, 0x0e,
	0xb0, 0x1d, 0x2b, 0x2e, 0x7f, 0x88, 0xe2, 0x07, 0xb1, 0xbc, 0xd4, 0xd9, 0x81, 0x8a, 0x6d, 0x06,
	0x94, 0xe8, 0xcd, 0x0a, 0x53, 0xd4, 0x9a, 0x4b, 0xdd, 0x89, 0xeb, 0xda, 0x5c, 0x5a, 0x20, 0xd1,
	0xf7, 0x50, 0xe1, 0x3c, 0xd1, 0x5c, 0x67, 0x32, 0x9f, 0xe5, 0x66, 0x2c, 0xd1, 0x05, 0x9a, 0x90,
	0x51, 0xfe, 0x2c, 0x00, 0x8a, 0xa6, 0xf3, 0x82, 0x38, 0xd8, 0xa1, 0xc1, 0x92, 0xc2, 0x4e, 0xd9,
	0x61, 0x2d, 0x9b, 0x1d, 0x8a, 0x49, 0x76, 0x38, 0x04, 0x44, 0x99, 0xda, 0x9e, 0xa9, 0x4f, 0x29,
	0xa2, 0xc4, 0x28, 0xe2, 0x01, 0xbf, 0xe9, 0xea, 0x92, 0x26, 0xe6, 0xb9, 0xa4, 0x9c, 0xc1, 0x25,
	0x7d, 0xce, 0x5a, 0xb1, 0xb7, 0x62, 0x86, 0xbe, 0x82, 0x75, 0xae, 0x4f, 0x32, 0x49, 0x4e, 0x57,
	0x33, 0x8c, 0x26, 0xb1, 0x39, 0x3c, 0xf2, 0x33, 0x6c, 0xf2, 0xb9, 0x17, 0x70, 0x91, 0x92, 0x63,
	0xa8, 0x70, 0xb9, 0xc5, 0x83, 0xc3, 0x65, 0x04, 0x54, 0x79, 0x2d, 0x39, 0x49, 0xea, 0x12, 0x0e,
	0x5f, 0x4b, 0xd9, 0x29, 0x34, 0xd2, 0x2e, 0xe5, 0x54, 0x69, 0x17, 0xaa, 0x71, 0xde, 0x59, 0x68,
	0x55, 0x6d, 0x43, 0xa6, 0x5b, 0xf9, 0x09, 0x1e, 0xbe, 0x22, 0xf4, 0x36, 0xdc, 0xf9, 0xb7, 0x08,
	0x9b, 0x9c, 0x15, 0x6e, 0xec, 0x55, 0xcc, 0x18, 0xc5, 0x9b, 0x30, 0x46, 0xe9, 0x0e, 0x19, 0xa3,
	0x7c, 0x57, 0x8c, 0x51, 0xb9, 0x2d, 0xc6, 0x58, 0xbf, 0x06, 0x63, 0x6c, 0x5c, 0x83, 0x31, 0x0c,
	0x4e, 0x18, 0x2f, 0xde, 0x76, 0x5f, 0x93, 0x49, 0x70, 0x93, 0xa2, 0x7f, 0x02, 0x30, 0xb0, 0xc7,
	0x01, 0x25, 0x7e, 0x74, 0xcb, 0x57, 0x87, 0xaa, 0x38, 0xe9, 0xea, 0xca, 0x1b, 0x3e, 0xeb, 0xb1,
	0xa1, 0xf8, 0xbd, 0x2c, 0x59, 0x64, 0x22, 0x07, 0x5d, 0x59, 0xf4, 0x58, 0x72, 0x51, 0x8d, 0xe1,
	0xa3, 0x85, 0x87, 0x8f, 0xa2, 0x38, 0xbd, 0x3b, 0xc7, 0x9f, 0x40, 0x63, 0xce, 0x86, 0x45, 0x26,
	0xd2, 0x46, 0x55, 0x2b, 0x5b, 0x64, 0xd2, 0xd5, 0x95, 0x33, 0x49, 0x0e, 0x12, 0x2d, 0x22, 0xfc,
	0x12, 0x8a, 0x16, 0x99, 0x88, 0x51, 0x5c, 0x25, 0xc0, 0x08, 0xde, 0xf9, 0xaf, 0x08, 0xf7, 0xe3,
	0xe7, 0xd9, 0x88, 0x9a, 0x6f, 0x82, 0x2c, 0xa8, 0x27, 0x57, 0x2f, 0x74, 0x98, 0x5b, 0xe9, 0x8c,
	0x5d, 0xb0, 0xf5, 0x7c, 0x45, 0xb4, 0x70, 0xdb, 0x81, 0x46, 0x6a, 0x5f, 0x42, 0xf9, 0xf2, 0x59,
	0x7b, 0x5a, 0x4b, 0x5d, 0x15, 0x2e, 0xec, 0xf5, 0x01, 0xa6, 0xeb, 0x14, 0x7a, 0x9a, 0x2b, 0x3d,
	0x63, 0x26, 0x9f, 0x1f, 0x32, 0x96, 0xb3, 0x4b, 0x68, 0xa4, 0x16, 0x9f, 0x05, 0x31, 0x65, 0x2d,
	0x48, 0xad, 0x9d, 0xb9, 0x71, 0xfc, 0x31, 0xfa, 0xd7, 0x02, 0xbd, 0x85, 0xc6, 0x4b, 0x62, 0x93,
	0xa9, 0xde, 0x95, 0xdd, 0xcf, 0xd1, 0xd8, 0xf9, 0xa7, 0x08, 0xf7, 0x24, 0x0f, 0x8b, 0xea, 0x5f,
	0x41, 0x2d, 0xf1, 0x58, 0xa2, 0x67, 0x0b, 0xcb, 0x99, 0x5e, 0x00, 0x5a, 0x87, 0xab, 0x81, 0x45,
	0x9a, 0x2c, 0xa8, 0x27, 0x9f, 0xb9, 0x05, 0x7d, 0x96, 0xf1, 0xb2, 0xb6, 0x9e, 0xaf, 0x88, 0x16,
	0xc6, 0x7a, 0x50, 0x8d, 0x5f, 0x30, 0xf4, 0x24, 0x9f, 0xbb, 0x52, 0x36, 0x3e, 0x5f, 0x54, 0xf5,
	0x19, 0x03, 0x17, 0x50, 0x4f, 0xbe, 0x6b, 0x0b, 0xa2, 0xc9, 0x78, 0xfe, 0x72, 0x4b, 0x7e, 0x0e,
	0x75, 0x5e, 0xf2, 0x0f, 0xf4, 0x3c, 0xaf, 0xe0, 0x7f, 0xad, 0x41, 0x8d, 0xcf, 0xff, 0x25, 0x1e,
	0xdb, 0x54, 0x56, 0x5b, 0xd0, 0xe5, 0x92, 0x6a, 0xa7, 0xd9, 0x7b, 0x49, 0xb5, 0x67, 0x19, 0x38,
	0xae, 0x36, 0xbf, 0x58, 0x5a, 0xed, 0x14, 0x19, 0x2e, 0xad, 0xf6, 0x0c, 0x19, 0xc6, 0x69, 0x13,
	0xc6, 0xf2, 0xd3, 0x96, 0x36, 0x93, 0x93, 0xb6, 0x93, 0x47, 0xbf, 0xed, 0x1b, 0x6e, 0x5a, 0xde,
	0xf5, 0x0d, 0xf9, 0xa3, 0xc1, 0x77, 0x26, 0x1e, 0x79, 0xfd, 0x7e, 0x85, 0x09, 0x1d, 0xff, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0xc3, 0xe3, 0x72, 0x81, 0x59, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetworkRegistryClient is the client API for NetworkRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkRegistryClient interface {
	// List networks.
	ListNetworks(ctx context.Context, in *ListNetworksRequest, opts ...grpc.CallOption) (*ListNetworksResponse, error)
	// Create a network.
	CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*CreateNetworkResponse, error)
	// Get a network.
	GetNetwork(ctx context.Context, in *NetworkRequest, opts ...grpc.CallOption) (*GetNetworkResponse, error)
	// Update a network.
	UpdateNetwork(ctx context.Context, in *UpdateNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error)
	// Delete a network.
	DeleteNetwork(ctx context.Context, in *NetworkRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type networkRegistryClient struct {
	cc *grpc.ClientConn
}

func NewNetworkRegistryClient(cc *grpc.ClientConn) NetworkRegistryClient {
	return &networkRegistryClient{cc}
}

func (c *networkRegistryClient) ListNetworks(ctx context.Context, in *ListNetworksRequest, opts ...grpc.CallOption) (*ListNetworksResponse, error) {
	out := new(ListNetworksResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.NetworkRegistry/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkRegistryClient) CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*CreateNetworkResponse, error) {
	out := new(CreateNetworkResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.NetworkRegistry/CreateNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkRegistryClient) GetNetwork(ctx context.Context, in *NetworkRequest, opts ...grpc.CallOption) (*GetNetworkResponse, error) {
	out := new(GetNetworkResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.NetworkRegistry/GetNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkRegistryClient) UpdateNetwork(ctx context.Context, in *UpdateNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.NetworkRegistry/UpdateNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkRegistryClient) DeleteNetwork(ctx context.Context, in *NetworkRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.NetworkRegistry/DeleteNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkRegistryServer is the server API for NetworkRegistry service.
type NetworkRegistryServer interface {
	// List networks.
	ListNetworks(context.Context, *ListNetworksRequest) (*ListNetworksResponse, error)
	// Create a network.
	CreateNetwork(context.Context, *CreateNetworkRequest) (*CreateNetworkResponse, error)
	// Get a network.
	GetNetwork(context.Context, *NetworkRequest) (*GetNetworkResponse, error)
	// Update a network.
	UpdateNetwork(context.Context, *UpdateNetworkRequest) (*types.Empty, error)
	// Delete a network.
	DeleteNetwork(context.Context, *NetworkRequest) (*types.Empty, error)
}

// UnimplementedNetworkRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkRegistryServer struct {
}

func (*UnimplementedNetworkRegistryServer) ListNetworks(ctx context.Context, req *ListNetworksRequest) (*ListNetworksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworks not implemented")
}
func (*UnimplementedNetworkRegistryServer) CreateNetwork(ctx context.Context, req *CreateNetworkRequest) (*CreateNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetwork not implemented")
}
func (*UnimplementedNetworkRegistryServer) GetNetwork(ctx context.Context, req *NetworkRequest) (*GetNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetwork not implemented")
}
func (*UnimplementedNetworkRegistryServer) UpdateNetwork(ctx context.Context, req *UpdateNetworkRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNetwork not implemented")
}
func (*UnimplementedNetworkRegistryServer) DeleteNetwork(ctx context.Context, req *NetworkRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNetwork not implemented")
}

func RegisterNetworkRegistryServer(s *grpc.Server, srv NetworkRegistryServer) {
	s.RegisterService(&_NetworkRegistry_serviceDesc, srv)
}

func _NetworkRegistry_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkRegistryServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.NetworkRegistry/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkRegistryServer).ListNetworks(ctx, req.(*ListNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkRegistry_CreateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkRegistryServer).CreateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.NetworkRegistry/CreateNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkRegistryServer).CreateNetwork(ctx, req.(*CreateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkRegistry_GetNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkRegistryServer).GetNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.NetworkRegistry/GetNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkRegistryServer).GetNetwork(ctx, req.(*NetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkRegistry_UpdateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkRegistryServer).UpdateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.NetworkRegistry/UpdateNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkRegistryServer).UpdateNetwork(ctx, req.(*UpdateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkRegistry_DeleteNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkRegistryServer).DeleteNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.NetworkRegistry/DeleteNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkRegistryServer).DeleteNetwork(ctx, req.(*NetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.packetbroker.iam.v1.NetworkRegistry",
	HandlerType: (*NetworkRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNetworks",
			Handler:    _NetworkRegistry_ListNetworks_Handler,
		},
		{
			MethodName: "CreateNetwork",
			Handler:    _NetworkRegistry_CreateNetwork_Handler,
		},
		{
			MethodName: "GetNetwork",
			Handler:    _NetworkRegistry_GetNetwork_Handler,
		},
		{
			MethodName: "UpdateNetwork",
			Handler:    _NetworkRegistry_UpdateNetwork_Handler,
		},
		{
			MethodName: "DeleteNetwork",
			Handler:    _NetworkRegistry_DeleteNetwork_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "packetbroker/api/iam/v1/service.proto",
}

// TenantRegistryClient is the client API for TenantRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantRegistryClient interface {
	// List a network's tenants.
	ListTenants(ctx context.Context, in *ListTenantsRequest, opts ...grpc.CallOption) (*ListTenantsResponse, error)
	// Create a tenant.
	CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error)
	// Get a tenant.
	GetTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*GetTenantResponse, error)
	// Update a tenant.
	UpdateTenant(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*types.Empty, error)
	// Delete a tenant.
	DeleteTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type tenantRegistryClient struct {
	cc *grpc.ClientConn
}

func NewTenantRegistryClient(cc *grpc.ClientConn) TenantRegistryClient {
	return &tenantRegistryClient{cc}
}

func (c *tenantRegistryClient) ListTenants(ctx context.Context, in *ListTenantsRequest, opts ...grpc.CallOption) (*ListTenantsResponse, error) {
	out := new(ListTenantsResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.TenantRegistry/ListTenants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error) {
	out := new(CreateTenantResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.TenantRegistry/CreateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) GetTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*GetTenantResponse, error) {
	out := new(GetTenantResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.TenantRegistry/GetTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) UpdateTenant(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.TenantRegistry/UpdateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) DeleteTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.TenantRegistry/DeleteTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantRegistryServer is the server API for TenantRegistry service.
type TenantRegistryServer interface {
	// List a network's tenants.
	ListTenants(context.Context, *ListTenantsRequest) (*ListTenantsResponse, error)
	// Create a tenant.
	CreateTenant(context.Context, *CreateTenantRequest) (*CreateTenantResponse, error)
	// Get a tenant.
	GetTenant(context.Context, *TenantRequest) (*GetTenantResponse, error)
	// Update a tenant.
	UpdateTenant(context.Context, *UpdateTenantRequest) (*types.Empty, error)
	// Delete a tenant.
	DeleteTenant(context.Context, *TenantRequest) (*types.Empty, error)
}

// UnimplementedTenantRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedTenantRegistryServer struct {
}

func (*UnimplementedTenantRegistryServer) ListTenants(ctx context.Context, req *ListTenantsRequest) (*ListTenantsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTenants not implemented")
}
func (*UnimplementedTenantRegistryServer) CreateTenant(ctx context.Context, req *CreateTenantRequest) (*CreateTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTenant not implemented")
}
func (*UnimplementedTenantRegistryServer) GetTenant(ctx context.Context, req *TenantRequest) (*GetTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTenant not implemented")
}
func (*UnimplementedTenantRegistryServer) UpdateTenant(ctx context.Context, req *UpdateTenantRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTenant not implemented")
}
func (*UnimplementedTenantRegistryServer) DeleteTenant(ctx context.Context, req *TenantRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTenant not implemented")
}

func RegisterTenantRegistryServer(s *grpc.Server, srv TenantRegistryServer) {
	s.RegisterService(&_TenantRegistry_serviceDesc, srv)
}

func _TenantRegistry_ListTenants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTenantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).ListTenants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.TenantRegistry/ListTenants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).ListTenants(ctx, req.(*ListTenantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.TenantRegistry/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).CreateTenant(ctx, req.(*CreateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_GetTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).GetTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.TenantRegistry/GetTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).GetTenant(ctx, req.(*TenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_UpdateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).UpdateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.TenantRegistry/UpdateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).UpdateTenant(ctx, req.(*UpdateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_DeleteTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).DeleteTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.TenantRegistry/DeleteTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).DeleteTenant(ctx, req.(*TenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TenantRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.packetbroker.iam.v1.TenantRegistry",
	HandlerType: (*TenantRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTenants",
			Handler:    _TenantRegistry_ListTenants_Handler,
		},
		{
			MethodName: "CreateTenant",
			Handler:    _TenantRegistry_CreateTenant_Handler,
		},
		{
			MethodName: "GetTenant",
			Handler:    _TenantRegistry_GetTenant_Handler,
		},
		{
			MethodName: "UpdateTenant",
			Handler:    _TenantRegistry_UpdateTenant_Handler,
		},
		{
			MethodName: "DeleteTenant",
			Handler:    _TenantRegistry_DeleteTenant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "packetbroker/api/iam/v1/service.proto",
}

// APIKeyVaultClient is the client API for APIKeyVault service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIKeyVaultClient interface {
	// List API keys.
	ListAPIKeys(ctx context.Context, in *ListAPIKeysRequest, opts ...grpc.CallOption) (*ListAPIKeysResponse, error)
	// Create an API key.
	CreateAPIKey(ctx context.Context, in *CreateAPIKeyRequest, opts ...grpc.CallOption) (*CreateAPIKeyResponse, error)
	// Delete an API key.
	DeleteAPIKey(ctx context.Context, in *APIKeyRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type aPIKeyVaultClient struct {
	cc *grpc.ClientConn
}

func NewAPIKeyVaultClient(cc *grpc.ClientConn) APIKeyVaultClient {
	return &aPIKeyVaultClient{cc}
}

func (c *aPIKeyVaultClient) ListAPIKeys(ctx context.Context, in *ListAPIKeysRequest, opts ...grpc.CallOption) (*ListAPIKeysResponse, error) {
	out := new(ListAPIKeysResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.APIKeyVault/ListAPIKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIKeyVaultClient) CreateAPIKey(ctx context.Context, in *CreateAPIKeyRequest, opts ...grpc.CallOption) (*CreateAPIKeyResponse, error) {
	out := new(CreateAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.APIKeyVault/CreateAPIKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIKeyVaultClient) DeleteAPIKey(ctx context.Context, in *APIKeyRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/org.packetbroker.iam.v1.APIKeyVault/DeleteAPIKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIKeyVaultServer is the server API for APIKeyVault service.
type APIKeyVaultServer interface {
	// List API keys.
	ListAPIKeys(context.Context, *ListAPIKeysRequest) (*ListAPIKeysResponse, error)
	// Create an API key.
	CreateAPIKey(context.Context, *CreateAPIKeyRequest) (*CreateAPIKeyResponse, error)
	// Delete an API key.
	DeleteAPIKey(context.Context, *APIKeyRequest) (*types.Empty, error)
}

// UnimplementedAPIKeyVaultServer can be embedded to have forward compatible implementations.
type UnimplementedAPIKeyVaultServer struct {
}

func (*UnimplementedAPIKeyVaultServer) ListAPIKeys(ctx context.Context, req *ListAPIKeysRequest) (*ListAPIKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAPIKeys not implemented")
}
func (*UnimplementedAPIKeyVaultServer) CreateAPIKey(ctx context.Context, req *CreateAPIKeyRequest) (*CreateAPIKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAPIKey not implemented")
}
func (*UnimplementedAPIKeyVaultServer) DeleteAPIKey(ctx context.Context, req *APIKeyRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAPIKey not implemented")
}

func RegisterAPIKeyVaultServer(s *grpc.Server, srv APIKeyVaultServer) {
	s.RegisterService(&_APIKeyVault_serviceDesc, srv)
}

func _APIKeyVault_ListAPIKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPIKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIKeyVaultServer).ListAPIKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.APIKeyVault/ListAPIKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIKeyVaultServer).ListAPIKeys(ctx, req.(*ListAPIKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIKeyVault_CreateAPIKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAPIKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIKeyVaultServer).CreateAPIKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.APIKeyVault/CreateAPIKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIKeyVaultServer).CreateAPIKey(ctx, req.(*CreateAPIKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIKeyVault_DeleteAPIKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIKeyVaultServer).DeleteAPIKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.packetbroker.iam.v1.APIKeyVault/DeleteAPIKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIKeyVaultServer).DeleteAPIKey(ctx, req.(*APIKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIKeyVault_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.packetbroker.iam.v1.APIKeyVault",
	HandlerType: (*APIKeyVaultServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAPIKeys",
			Handler:    _APIKeyVault_ListAPIKeys_Handler,
		},
		{
			MethodName: "CreateAPIKey",
			Handler:    _APIKeyVault_CreateAPIKey_Handler,
		},
		{
			MethodName: "DeleteAPIKey",
			Handler:    _APIKeyVault_DeleteAPIKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "packetbroker/api/iam/v1/service.proto",
}
