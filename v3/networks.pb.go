// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: packetbroker/api/v3/networks.proto

package packetbroker

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Network struct {
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// Name of the network.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// DevAddr prefixes of the tenant.
	DevAddrBlocks []*DevAddrBlock `protobuf:"bytes,3,rep,name=dev_addr_blocks,json=devAddrBlocks,proto3" json:"dev_addr_blocks,omitempty"`
	// Administrative contact.
	AdministrativeContact *ContactInfo `protobuf:"bytes,4,opt,name=administrative_contact,json=administrativeContact,proto3" json:"administrative_contact,omitempty"`
	// Technical contact.
	TechnicalContact *ContactInfo `protobuf:"bytes,5,opt,name=technical_contact,json=technicalContact,proto3" json:"technical_contact,omitempty"`
	// Indicates whether the network is listed in the catalog.
	Listed bool `protobuf:"varint,6,opt,name=listed,proto3" json:"listed,omitempty"`
	// Optional target information.
	Target               *Target  `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{0}
}
func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetDevAddrBlocks() []*DevAddrBlock {
	if m != nil {
		return m.DevAddrBlocks
	}
	return nil
}

func (m *Network) GetAdministrativeContact() *ContactInfo {
	if m != nil {
		return m.AdministrativeContact
	}
	return nil
}

func (m *Network) GetTechnicalContact() *ContactInfo {
	if m != nil {
		return m.TechnicalContact
	}
	return nil
}

func (m *Network) GetListed() bool {
	if m != nil {
		return m.Listed
	}
	return false
}

func (m *Network) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

type Tenant struct {
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// ID assigned by the Member.
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Name of the tenant.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// DevAddr prefixes of the tenant.
	DevAddrBlocks []*DevAddrBlock `protobuf:"bytes,5,rep,name=dev_addr_blocks,json=devAddrBlocks,proto3" json:"dev_addr_blocks,omitempty"`
	// Administrative contact.
	AdministrativeContact *ContactInfo `protobuf:"bytes,6,opt,name=administrative_contact,json=administrativeContact,proto3" json:"administrative_contact,omitempty"`
	// Technical contact.
	TechnicalContact *ContactInfo `protobuf:"bytes,7,opt,name=technical_contact,json=technicalContact,proto3" json:"technical_contact,omitempty"`
	// Indicates whether the tenant is listed in the catalog.
	Listed bool `protobuf:"varint,8,opt,name=listed,proto3" json:"listed,omitempty"`
	// Optional target information.
	Target               *Target  `protobuf:"bytes,9,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tenant) Reset()         { *m = Tenant{} }
func (m *Tenant) String() string { return proto.CompactTextString(m) }
func (*Tenant) ProtoMessage()    {}
func (*Tenant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{1}
}
func (m *Tenant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tenant.Unmarshal(m, b)
}
func (m *Tenant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tenant.Marshal(b, m, deterministic)
}
func (m *Tenant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tenant.Merge(m, src)
}
func (m *Tenant) XXX_Size() int {
	return xxx_messageInfo_Tenant.Size(m)
}
func (m *Tenant) XXX_DiscardUnknown() {
	xxx_messageInfo_Tenant.DiscardUnknown(m)
}

var xxx_messageInfo_Tenant proto.InternalMessageInfo

func (m *Tenant) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *Tenant) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *Tenant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tenant) GetDevAddrBlocks() []*DevAddrBlock {
	if m != nil {
		return m.DevAddrBlocks
	}
	return nil
}

func (m *Tenant) GetAdministrativeContact() *ContactInfo {
	if m != nil {
		return m.AdministrativeContact
	}
	return nil
}

func (m *Tenant) GetTechnicalContact() *ContactInfo {
	if m != nil {
		return m.TechnicalContact
	}
	return nil
}

func (m *Tenant) GetListed() bool {
	if m != nil {
		return m.Listed
	}
	return false
}

func (m *Tenant) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

type NetworkOrTenant struct {
	// Types that are valid to be assigned to Value:
	//	*NetworkOrTenant_Network
	//	*NetworkOrTenant_Tenant
	Value                isNetworkOrTenant_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *NetworkOrTenant) Reset()         { *m = NetworkOrTenant{} }
func (m *NetworkOrTenant) String() string { return proto.CompactTextString(m) }
func (*NetworkOrTenant) ProtoMessage()    {}
func (*NetworkOrTenant) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{2}
}
func (m *NetworkOrTenant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkOrTenant.Unmarshal(m, b)
}
func (m *NetworkOrTenant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkOrTenant.Marshal(b, m, deterministic)
}
func (m *NetworkOrTenant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkOrTenant.Merge(m, src)
}
func (m *NetworkOrTenant) XXX_Size() int {
	return xxx_messageInfo_NetworkOrTenant.Size(m)
}
func (m *NetworkOrTenant) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkOrTenant.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkOrTenant proto.InternalMessageInfo

type isNetworkOrTenant_Value interface {
	isNetworkOrTenant_Value()
}

type NetworkOrTenant_Network struct {
	Network *Network `protobuf:"bytes,1,opt,name=network,proto3,oneof" json:"network,omitempty"`
}
type NetworkOrTenant_Tenant struct {
	Tenant *Tenant `protobuf:"bytes,2,opt,name=tenant,proto3,oneof" json:"tenant,omitempty"`
}

func (*NetworkOrTenant_Network) isNetworkOrTenant_Value() {}
func (*NetworkOrTenant_Tenant) isNetworkOrTenant_Value()  {}

func (m *NetworkOrTenant) GetValue() isNetworkOrTenant_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *NetworkOrTenant) GetNetwork() *Network {
	if x, ok := m.GetValue().(*NetworkOrTenant_Network); ok {
		return x.Network
	}
	return nil
}

func (m *NetworkOrTenant) GetTenant() *Tenant {
	if x, ok := m.GetValue().(*NetworkOrTenant_Tenant); ok {
		return x.Tenant
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NetworkOrTenant) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NetworkOrTenant_Network)(nil),
		(*NetworkOrTenant_Tenant)(nil),
	}
}

type DevAddrPrefix struct {
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// Significant bits of value.
	Length               uint32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevAddrPrefix) Reset()         { *m = DevAddrPrefix{} }
func (m *DevAddrPrefix) String() string { return proto.CompactTextString(m) }
func (*DevAddrPrefix) ProtoMessage()    {}
func (*DevAddrPrefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{3}
}
func (m *DevAddrPrefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevAddrPrefix.Unmarshal(m, b)
}
func (m *DevAddrPrefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevAddrPrefix.Marshal(b, m, deterministic)
}
func (m *DevAddrPrefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevAddrPrefix.Merge(m, src)
}
func (m *DevAddrPrefix) XXX_Size() int {
	return xxx_messageInfo_DevAddrPrefix.Size(m)
}
func (m *DevAddrPrefix) XXX_DiscardUnknown() {
	xxx_messageInfo_DevAddrPrefix.DiscardUnknown(m)
}

var xxx_messageInfo_DevAddrPrefix proto.InternalMessageInfo

func (m *DevAddrPrefix) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DevAddrPrefix) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type DevAddrBlock struct {
	Prefix *DevAddrPrefix `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Cluster of the Home Network Member (optional).
	HomeNetworkClusterId string   `protobuf:"bytes,2,opt,name=home_network_cluster_id,json=homeNetworkClusterId,proto3" json:"home_network_cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevAddrBlock) Reset()         { *m = DevAddrBlock{} }
func (m *DevAddrBlock) String() string { return proto.CompactTextString(m) }
func (*DevAddrBlock) ProtoMessage()    {}
func (*DevAddrBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{4}
}
func (m *DevAddrBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevAddrBlock.Unmarshal(m, b)
}
func (m *DevAddrBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevAddrBlock.Marshal(b, m, deterministic)
}
func (m *DevAddrBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevAddrBlock.Merge(m, src)
}
func (m *DevAddrBlock) XXX_Size() int {
	return xxx_messageInfo_DevAddrBlock.Size(m)
}
func (m *DevAddrBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_DevAddrBlock.DiscardUnknown(m)
}

var xxx_messageInfo_DevAddrBlock proto.InternalMessageInfo

func (m *DevAddrBlock) GetPrefix() *DevAddrPrefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *DevAddrBlock) GetHomeNetworkClusterId() string {
	if m != nil {
		return m.HomeNetworkClusterId
	}
	return ""
}

type NetworkAPIKey struct {
	// Unique identifier of the API key.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,2,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// ID assigned by the Member.
	TenantId string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Cluster of the Member.
	ClusterId string `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Network rights.
	Rights []Right `protobuf:"varint,7,rep,packed,name=rights,proto3,enum=org.packetbroker.v3.Right" json:"rights,omitempty"`
	// Last authentication timestamp.
	AuthenticatedAt *types.Timestamp `protobuf:"bytes,5,opt,name=authenticated_at,json=authenticatedAt,proto3" json:"authenticated_at,omitempty"`
	// Secret key value.
	Key string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	// Key state.
	State                APIKeyState `protobuf:"varint,8,opt,name=state,proto3,enum=org.packetbroker.v3.APIKeyState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NetworkAPIKey) Reset()         { *m = NetworkAPIKey{} }
func (m *NetworkAPIKey) String() string { return proto.CompactTextString(m) }
func (*NetworkAPIKey) ProtoMessage()    {}
func (*NetworkAPIKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{5}
}
func (m *NetworkAPIKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkAPIKey.Unmarshal(m, b)
}
func (m *NetworkAPIKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkAPIKey.Marshal(b, m, deterministic)
}
func (m *NetworkAPIKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkAPIKey.Merge(m, src)
}
func (m *NetworkAPIKey) XXX_Size() int {
	return xxx_messageInfo_NetworkAPIKey.Size(m)
}
func (m *NetworkAPIKey) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkAPIKey.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkAPIKey proto.InternalMessageInfo

func (m *NetworkAPIKey) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *NetworkAPIKey) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *NetworkAPIKey) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *NetworkAPIKey) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *NetworkAPIKey) GetRights() []Right {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *NetworkAPIKey) GetAuthenticatedAt() *types.Timestamp {
	if m != nil {
		return m.AuthenticatedAt
	}
	return nil
}

func (m *NetworkAPIKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NetworkAPIKey) GetState() APIKeyState {
	if m != nil {
		return m.State
	}
	return APIKeyState_REQUESTED
}

type Target struct {
	// Protocol to use.
	Protocol TargetProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=org.packetbroker.v3.TargetProtocol" json:"protocol,omitempty"`
	// Address of the target.
	// When using an HTTP protocol, this can be a URL with scheme, host, port and path.
	// This value may be empty if the protocol supports service lookup (e.g. via DNS).
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// PEM encoded root CAs to verify the server certificate.
	// This value may be empty to use the default trusted root certificates.
	RootCas []byte `protobuf:"bytes,6,opt,name=root_cas,json=rootCas,proto3" json:"root_cas,omitempty"`
	// Types that are valid to be assigned to Authorization:
	//	*Target_BasicAuth_
	//	*Target_CustomAuth_
	//	*Target_TlsClientAuth
	Authorization        isTarget_Authorization `protobuf_oneof:"authorization"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{6}
}
func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

type isTarget_Authorization interface {
	isTarget_Authorization()
}

type Target_BasicAuth_ struct {
	BasicAuth *Target_BasicAuth `protobuf:"bytes,3,opt,name=basic_auth,json=basicAuth,proto3,oneof" json:"basic_auth,omitempty"`
}
type Target_CustomAuth_ struct {
	CustomAuth *Target_CustomAuth `protobuf:"bytes,4,opt,name=custom_auth,json=customAuth,proto3,oneof" json:"custom_auth,omitempty"`
}
type Target_TlsClientAuth struct {
	TlsClientAuth *Target_TLSClientAuth `protobuf:"bytes,5,opt,name=tls_client_auth,json=tlsClientAuth,proto3,oneof" json:"tls_client_auth,omitempty"`
}

func (*Target_BasicAuth_) isTarget_Authorization()    {}
func (*Target_CustomAuth_) isTarget_Authorization()   {}
func (*Target_TlsClientAuth) isTarget_Authorization() {}

func (m *Target) GetAuthorization() isTarget_Authorization {
	if m != nil {
		return m.Authorization
	}
	return nil
}

func (m *Target) GetProtocol() TargetProtocol {
	if m != nil {
		return m.Protocol
	}
	return TargetProtocol_TS002_V1_0
}

func (m *Target) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Target) GetRootCas() []byte {
	if m != nil {
		return m.RootCas
	}
	return nil
}

func (m *Target) GetBasicAuth() *Target_BasicAuth {
	if x, ok := m.GetAuthorization().(*Target_BasicAuth_); ok {
		return x.BasicAuth
	}
	return nil
}

func (m *Target) GetCustomAuth() *Target_CustomAuth {
	if x, ok := m.GetAuthorization().(*Target_CustomAuth_); ok {
		return x.CustomAuth
	}
	return nil
}

func (m *Target) GetTlsClientAuth() *Target_TLSClientAuth {
	if x, ok := m.GetAuthorization().(*Target_TlsClientAuth); ok {
		return x.TlsClientAuth
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Target) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Target_BasicAuth_)(nil),
		(*Target_CustomAuth_)(nil),
		(*Target_TlsClientAuth)(nil),
	}
}

type Target_BasicAuth struct {
	// Username.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password.
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target_BasicAuth) Reset()         { *m = Target_BasicAuth{} }
func (m *Target_BasicAuth) String() string { return proto.CompactTextString(m) }
func (*Target_BasicAuth) ProtoMessage()    {}
func (*Target_BasicAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{6, 0}
}
func (m *Target_BasicAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target_BasicAuth.Unmarshal(m, b)
}
func (m *Target_BasicAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target_BasicAuth.Marshal(b, m, deterministic)
}
func (m *Target_BasicAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target_BasicAuth.Merge(m, src)
}
func (m *Target_BasicAuth) XXX_Size() int {
	return xxx_messageInfo_Target_BasicAuth.Size(m)
}
func (m *Target_BasicAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_Target_BasicAuth.DiscardUnknown(m)
}

var xxx_messageInfo_Target_BasicAuth proto.InternalMessageInfo

func (m *Target_BasicAuth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Target_BasicAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Target_CustomAuth struct {
	// Custom authorization value.
	// When using an HTTP protocol, this is used as the raw Authorization header value. That is, it may include the
	// authorization type (Bearer, Basic, Key, etc).
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target_CustomAuth) Reset()         { *m = Target_CustomAuth{} }
func (m *Target_CustomAuth) String() string { return proto.CompactTextString(m) }
func (*Target_CustomAuth) ProtoMessage()    {}
func (*Target_CustomAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{6, 1}
}
func (m *Target_CustomAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target_CustomAuth.Unmarshal(m, b)
}
func (m *Target_CustomAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target_CustomAuth.Marshal(b, m, deterministic)
}
func (m *Target_CustomAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target_CustomAuth.Merge(m, src)
}
func (m *Target_CustomAuth) XXX_Size() int {
	return xxx_messageInfo_Target_CustomAuth.Size(m)
}
func (m *Target_CustomAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_Target_CustomAuth.DiscardUnknown(m)
}

var xxx_messageInfo_Target_CustomAuth proto.InternalMessageInfo

func (m *Target_CustomAuth) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Target_TLSClientAuth struct {
	// PEM encoded client certificate.
	Cert []byte `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	// PEM encoded private key.
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target_TLSClientAuth) Reset()         { *m = Target_TLSClientAuth{} }
func (m *Target_TLSClientAuth) String() string { return proto.CompactTextString(m) }
func (*Target_TLSClientAuth) ProtoMessage()    {}
func (*Target_TLSClientAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{6, 2}
}
func (m *Target_TLSClientAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target_TLSClientAuth.Unmarshal(m, b)
}
func (m *Target_TLSClientAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target_TLSClientAuth.Marshal(b, m, deterministic)
}
func (m *Target_TLSClientAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target_TLSClientAuth.Merge(m, src)
}
func (m *Target_TLSClientAuth) XXX_Size() int {
	return xxx_messageInfo_Target_TLSClientAuth.Size(m)
}
func (m *Target_TLSClientAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_Target_TLSClientAuth.DiscardUnknown(m)
}

var xxx_messageInfo_Target_TLSClientAuth proto.InternalMessageInfo

func (m *Target_TLSClientAuth) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *Target_TLSClientAuth) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type NetworkTarget struct {
	// LoRa Alliance NetID of the Member.
	NetId uint32 `protobuf:"varint,1,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// Tenant ID assigned by the Member (optional).
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Target information.
	Target               *Target  `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkTarget) Reset()         { *m = NetworkTarget{} }
func (m *NetworkTarget) String() string { return proto.CompactTextString(m) }
func (*NetworkTarget) ProtoMessage()    {}
func (*NetworkTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_9961a18bcd231dc0, []int{7}
}
func (m *NetworkTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkTarget.Unmarshal(m, b)
}
func (m *NetworkTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkTarget.Marshal(b, m, deterministic)
}
func (m *NetworkTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkTarget.Merge(m, src)
}
func (m *NetworkTarget) XXX_Size() int {
	return xxx_messageInfo_NetworkTarget.Size(m)
}
func (m *NetworkTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkTarget.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkTarget proto.InternalMessageInfo

func (m *NetworkTarget) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *NetworkTarget) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *NetworkTarget) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func init() {
	proto.RegisterType((*Network)(nil), "org.packetbroker.v3.Network")
	proto.RegisterType((*Tenant)(nil), "org.packetbroker.v3.Tenant")
	proto.RegisterType((*NetworkOrTenant)(nil), "org.packetbroker.v3.NetworkOrTenant")
	proto.RegisterType((*DevAddrPrefix)(nil), "org.packetbroker.v3.DevAddrPrefix")
	proto.RegisterType((*DevAddrBlock)(nil), "org.packetbroker.v3.DevAddrBlock")
	proto.RegisterType((*NetworkAPIKey)(nil), "org.packetbroker.v3.NetworkAPIKey")
	proto.RegisterType((*Target)(nil), "org.packetbroker.v3.Target")
	proto.RegisterType((*Target_BasicAuth)(nil), "org.packetbroker.v3.Target.BasicAuth")
	proto.RegisterType((*Target_CustomAuth)(nil), "org.packetbroker.v3.Target.CustomAuth")
	proto.RegisterType((*Target_TLSClientAuth)(nil), "org.packetbroker.v3.Target.TLSClientAuth")
	proto.RegisterType((*NetworkTarget)(nil), "org.packetbroker.v3.NetworkTarget")
}

func init() {
	proto.RegisterFile("packetbroker/api/v3/networks.proto", fileDescriptor_9961a18bcd231dc0)
}

var fileDescriptor_9961a18bcd231dc0 = []byte{
	// 882 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5d, 0x8f, 0x22, 0x45,
	0x14, 0x1d, 0xbe, 0x1a, 0xfa, 0x32, 0x0c, 0x63, 0xb9, 0xbb, 0x22, 0xab, 0x59, 0xb6, 0x8d, 0xca,
	0xbe, 0x34, 0x09, 0x93, 0x31, 0x46, 0x63, 0xcc, 0x80, 0x9a, 0xc1, 0xcf, 0x49, 0xcd, 0x24, 0x26,
	0xbe, 0x74, 0x8a, 0xee, 0x1a, 0xe8, 0xd0, 0x74, 0x91, 0xaa, 0x0b, 0xbb, 0xe3, 0x9b, 0xcf, 0xbe,
	0xeb, 0xbf, 0xf1, 0x57, 0xf9, 0x03, 0x4c, 0x57, 0x55, 0x33, 0x60, 0x80, 0x4c, 0xcc, 0xf8, 0xd6,
	0xb7, 0xea, 0xdc, 0x53, 0x75, 0xeb, 0x9c, 0x7b, 0x01, 0xbc, 0x05, 0x0b, 0x67, 0x1c, 0xc7, 0x52,
	0xcc, 0xb8, 0xec, 0xb1, 0x45, 0xdc, 0x5b, 0x9d, 0xf5, 0x52, 0x8e, 0xaf, 0x85, 0x9c, 0x29, 0x7f,
	0x21, 0x05, 0x0a, 0xf2, 0xb6, 0x90, 0x13, 0x7f, 0x13, 0xe7, 0xaf, 0xce, 0xda, 0x2f, 0x26, 0x42,
	0x4c, 0x12, 0xde, 0xd3, 0x90, 0xf1, 0xf2, 0xb6, 0x87, 0xf1, 0x9c, 0x2b, 0x64, 0xf3, 0x85, 0xc9,
	0x6a, 0xbf, 0xdc, 0xc5, 0x1c, 0x8a, 0x14, 0x59, 0x88, 0x16, 0xf2, 0x62, 0x17, 0x84, 0xa7, 0xcb,
	0xb9, 0x3d, 0xd9, 0xfb, 0xbb, 0x08, 0xd5, 0x1f, 0xcd, 0x65, 0xc8, 0x53, 0x70, 0x52, 0x8e, 0x41,
	0x1c, 0xb5, 0x0a, 0x9d, 0x42, 0xb7, 0x41, 0x2b, 0x29, 0xc7, 0x51, 0x44, 0x08, 0x94, 0x53, 0x36,
	0xe7, 0xad, 0x62, 0xa7, 0xd0, 0x75, 0xa9, 0xfe, 0x26, 0x23, 0x68, 0x46, 0x7c, 0x15, 0xb0, 0x28,
	0x92, 0xc1, 0x38, 0x11, 0xe1, 0x4c, 0xb5, 0x4a, 0x9d, 0x52, 0xb7, 0xde, 0x7f, 0xe9, 0xef, 0x28,
	0xc5, 0xff, 0x8a, 0xaf, 0x2e, 0xa2, 0x48, 0x0e, 0x32, 0x24, 0x6d, 0x44, 0x1b, 0x91, 0x22, 0x3f,
	0xc3, 0x33, 0x16, 0xcd, 0xe3, 0x34, 0x56, 0x28, 0x19, 0xc6, 0x2b, 0x1e, 0xd8, 0x12, 0x5a, 0xe5,
	0x4e, 0xa1, 0x5b, 0xef, 0x77, 0x76, 0x32, 0x0e, 0x0d, 0x66, 0x94, 0xde, 0x0a, 0xfa, 0x74, 0x3b,
	0xdf, 0x6e, 0x91, 0x1f, 0xe0, 0x2d, 0xe4, 0xe1, 0x34, 0x8d, 0x43, 0x96, 0xac, 0x39, 0x2b, 0x0f,
	0xe4, 0x3c, 0x5d, 0xa7, 0xe6, 0x74, 0xcf, 0xc0, 0x49, 0x62, 0x85, 0x3c, 0x6a, 0x39, 0x9d, 0x42,
	0xb7, 0x46, 0x6d, 0x44, 0xce, 0xc0, 0x41, 0x26, 0x27, 0x1c, 0x5b, 0x55, 0xcd, 0xfd, 0x7c, 0x27,
	0xf7, 0x8d, 0x86, 0x50, 0x0b, 0xf5, 0xfe, 0x28, 0x81, 0x73, 0xc3, 0x53, 0x96, 0xe2, 0xbe, 0x57,
	0x7f, 0x0e, 0x2e, 0x6a, 0x40, 0xb6, 0x63, 0x9e, 0xbe, 0x66, 0x16, 0x36, 0x24, 0x29, 0x1f, 0x96,
	0xa4, 0xf2, 0xe8, 0x92, 0x38, 0xff, 0x83, 0x24, 0xd5, 0x47, 0x90, 0xa4, 0xb6, 0x47, 0x12, 0xf7,
	0xc1, 0x92, 0x7c, 0x5b, 0xae, 0x95, 0x4e, 0xcb, 0xde, 0xef, 0x05, 0x68, 0xda, 0x7e, 0xf8, 0x49,
	0x5a, 0x85, 0x3e, 0x85, 0xaa, 0xed, 0x57, 0x2d, 0x51, 0xbd, 0xff, 0xde, 0x4e, 0x3e, 0x9b, 0x76,
	0x79, 0x44, 0x73, 0x38, 0x39, 0x07, 0xc7, 0x68, 0xa6, 0x15, 0xdc, 0x7b, 0x11, 0x0d, 0xb9, 0x3c,
	0xa2, 0x16, 0x3c, 0xa8, 0x42, 0x65, 0xc5, 0x92, 0x25, 0xf7, 0xbe, 0x80, 0x86, 0xd5, 0xe9, 0x4a,
	0xf2, 0xdb, 0xf8, 0x0d, 0x79, 0x62, 0x77, 0x72, 0xaf, 0xe8, 0x40, 0xbf, 0x03, 0x4f, 0x27, 0x38,
	0xd5, 0xc7, 0x34, 0xa8, 0x8d, 0xbc, 0xdf, 0x0a, 0x70, 0xbc, 0xa9, 0x33, 0xf9, 0x0c, 0x9c, 0x85,
	0x26, 0xb2, 0x85, 0x78, 0x87, 0xac, 0x61, 0x8e, 0xa4, 0x36, 0x83, 0x9c, 0xc3, 0x3b, 0x53, 0x31,
	0xe7, 0x81, 0xad, 0x2d, 0x08, 0x93, 0xa5, 0x42, 0x2e, 0xef, 0xed, 0xf9, 0x24, 0xdb, 0xb6, 0x8f,
	0x30, 0x34, 0x9b, 0xa3, 0xc8, 0xfb, 0xab, 0x08, 0x0d, 0xbb, 0x78, 0x71, 0x35, 0xfa, 0x8e, 0xdf,
	0x65, 0x86, 0x9f, 0xf1, 0xbb, 0xdc, 0xf0, 0x2e, 0xad, 0xcc, 0xf8, 0xdd, 0x28, 0xda, 0xe8, 0x83,
	0xe2, 0xde, 0x3e, 0x28, 0xfd, 0xab, 0x0f, 0xde, 0x07, 0xd8, 0xb8, 0x86, 0xe9, 0x06, 0x37, 0xcc,
	0xcf, 0x26, 0x7d, 0x70, 0x64, 0x3c, 0x99, 0xa2, 0x6a, 0x55, 0x3b, 0xa5, 0xee, 0x49, 0xbf, 0xbd,
	0xb3, 0x5c, 0x9a, 0x41, 0xa8, 0x45, 0x92, 0xaf, 0xe1, 0x94, 0x2d, 0x71, 0xca, 0x53, 0x8c, 0x43,
	0x86, 0x3c, 0x0a, 0x58, 0x3e, 0x34, 0xda, 0xbe, 0x19, 0xc8, 0x7e, 0x3e, 0x90, 0xfd, 0x9b, 0x7c,
	0x20, 0xd3, 0xe6, 0x56, 0xce, 0x05, 0x92, 0x53, 0x28, 0xcd, 0xf8, 0x9d, 0xee, 0x17, 0x97, 0x66,
	0x9f, 0xe4, 0x13, 0xa8, 0x28, 0x64, 0xc8, 0xb5, 0x57, 0x4f, 0xf6, 0xf8, 0xdd, 0x3c, 0xd1, 0x75,
	0x86, 0xa3, 0x06, 0xee, 0xfd, 0x59, 0x06, 0xc7, 0x58, 0x95, 0x7c, 0x09, 0x35, 0x7d, 0x76, 0x28,
	0x12, 0xfd, 0x76, 0x27, 0xfd, 0x0f, 0x0e, 0x38, 0xfb, 0xca, 0x42, 0xe9, 0x3a, 0x89, 0xb4, 0xa0,
	0x9a, 0xcd, 0x07, 0xae, 0x94, 0xd5, 0x2c, 0x0f, 0xc9, 0xbb, 0x50, 0x93, 0x42, 0x60, 0x10, 0x32,
	0xa5, 0x2f, 0x7d, 0x4c, 0xab, 0x59, 0x3c, 0x64, 0x8a, 0x7c, 0x03, 0x30, 0x66, 0x2a, 0x0e, 0x83,
	0xac, 0x46, 0x2d, 0x41, 0xbd, 0xff, 0xe1, 0x81, 0x73, 0xfd, 0x41, 0x86, 0xbe, 0x58, 0xe2, 0xf4,
	0xf2, 0x88, 0xba, 0xe3, 0x3c, 0x20, 0x23, 0xa8, 0x87, 0x4b, 0x85, 0x62, 0x6e, 0x88, 0xcc, 0x74,
	0xff, 0xe8, 0x10, 0xd1, 0x50, 0xc3, 0x2d, 0x13, 0x84, 0xeb, 0x88, 0x5c, 0x43, 0x13, 0x13, 0x15,
	0x84, 0x49, 0xcc, 0x53, 0x34, 0x74, 0x46, 0xa3, 0x57, 0x87, 0xe8, 0x6e, 0xbe, 0xbf, 0x1e, 0xea,
	0x0c, 0xcb, 0xd8, 0xc0, 0x44, 0xdd, 0x2f, 0xb4, 0x87, 0xe0, 0xae, 0x6f, 0x4e, 0xda, 0x50, 0x5b,
	0x2a, 0x2e, 0xf5, 0x94, 0x35, 0x36, 0x5d, 0xc7, 0xd9, 0xde, 0x82, 0x29, 0xf5, 0x5a, 0xc8, 0xf5,
	0x64, 0xce, 0xe3, 0xb6, 0x07, 0x70, 0x7f, 0xeb, 0xed, 0x76, 0x75, 0x6d, 0xbb, 0xb6, 0xcf, 0xa1,
	0xb1, 0x75, 0x95, 0x6c, 0x9c, 0x87, 0x5c, 0xa2, 0x46, 0x1d, 0x53, 0xfd, 0x9d, 0x1b, 0xa8, 0xa8,
	0x97, 0xb2, 0xcf, 0x41, 0x13, 0x1a, 0x59, 0xa5, 0x42, 0xc6, 0xbf, 0x32, 0x8c, 0x45, 0xea, 0xbd,
	0x59, 0x77, 0x96, 0xf5, 0xc7, 0x7f, 0xf9, 0x29, 0xb9, 0x9f, 0x95, 0xa5, 0x07, 0xcf, 0xca, 0xc1,
	0xab, 0x5f, 0x3e, 0x9e, 0x88, 0x6d, 0x90, 0x90, 0x13, 0xfb, 0xff, 0xe2, 0xf3, 0xcd, 0xf5, 0xb1,
	0xa3, 0xcd, 0x77, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xff, 0x59, 0x51, 0x07, 0x09,
	0x00, 0x00,
}
