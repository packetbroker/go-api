// Copyright Â© 2021 The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: packetbroker/api/v3/target.proto

package packetbroker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Protocol to use.
	Protocol Protocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=org.packetbroker.v3.Protocol" json:"protocol,omitempty"`
	// Address of the target.
	// When using an HTTP protocol, this can be a URL with scheme, host, port and path.
	// This value may be empty if the protocol supports service lookup (e.g. via DNS).
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Path of the Forwarding Network Server (fNS) endpoint.
	FNsPath string `protobuf:"bytes,9,opt,name=f_ns_path,json=fNsPath,proto3" json:"f_ns_path,omitempty"`
	// Path of the Serving Network Server (sNS) endpoint.
	SNsPath string `protobuf:"bytes,10,opt,name=s_ns_path,json=sNsPath,proto3" json:"s_ns_path,omitempty"`
	// Path of the Home Network Server (hNS) endpoint.
	HNsPath string `protobuf:"bytes,11,opt,name=h_ns_path,json=hNsPath,proto3" json:"h_ns_path,omitempty"`
	// PEM encoded root CAs to verify the server certificate.
	// This value may be empty to use the default trusted root certificates.
	RootCas []byte `protobuf:"bytes,6,opt,name=root_cas,json=rootCas,proto3" json:"root_cas,omitempty"`
	// Default authentication when no custom authentication per NetID is set.
	//
	// Types that are assignable to DefaultAuthentication:
	//
	//	*Target_BasicAuth_
	//	*Target_CustomAuth_
	//	*Target_TlsClientAuth
	//	*Target_PbTokenAuth
	DefaultAuthentication isTarget_DefaultAuthentication `protobuf_oneof:"default_authentication"`
	// Custom authentication per originating NetID.
	OriginNetIdAuthentication map[uint32]*Target_Authentication `protobuf:"bytes,8,rep,name=origin_net_id_authentication,json=originNetIdAuthentication,proto3" json:"origin_net_id_authentication,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_v3_target_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_v3_target_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_v3_target_proto_rawDescGZIP(), []int{0}
}

func (x *Target) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_TS002_V1_0
}

func (x *Target) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Target) GetFNsPath() string {
	if x != nil {
		return x.FNsPath
	}
	return ""
}

func (x *Target) GetSNsPath() string {
	if x != nil {
		return x.SNsPath
	}
	return ""
}

func (x *Target) GetHNsPath() string {
	if x != nil {
		return x.HNsPath
	}
	return ""
}

func (x *Target) GetRootCas() []byte {
	if x != nil {
		return x.RootCas
	}
	return nil
}

func (m *Target) GetDefaultAuthentication() isTarget_DefaultAuthentication {
	if m != nil {
		return m.DefaultAuthentication
	}
	return nil
}

func (x *Target) GetBasicAuth() *Target_BasicAuth {
	if x, ok := x.GetDefaultAuthentication().(*Target_BasicAuth_); ok {
		return x.BasicAuth
	}
	return nil
}

func (x *Target) GetCustomAuth() *Target_CustomAuth {
	if x, ok := x.GetDefaultAuthentication().(*Target_CustomAuth_); ok {
		return x.CustomAuth
	}
	return nil
}

func (x *Target) GetTlsClientAuth() *Target_TLSClientAuth {
	if x, ok := x.GetDefaultAuthentication().(*Target_TlsClientAuth); ok {
		return x.TlsClientAuth
	}
	return nil
}

func (x *Target) GetPbTokenAuth() *Target_PacketBrokerTokenAuth {
	if x, ok := x.GetDefaultAuthentication().(*Target_PbTokenAuth); ok {
		return x.PbTokenAuth
	}
	return nil
}

func (x *Target) GetOriginNetIdAuthentication() map[uint32]*Target_Authentication {
	if x != nil {
		return x.OriginNetIdAuthentication
	}
	return nil
}

type isTarget_DefaultAuthentication interface {
	isTarget_DefaultAuthentication()
}

type Target_BasicAuth_ struct {
	BasicAuth *Target_BasicAuth `protobuf:"bytes,3,opt,name=basic_auth,json=basicAuth,proto3,oneof"`
}

type Target_CustomAuth_ struct {
	CustomAuth *Target_CustomAuth `protobuf:"bytes,4,opt,name=custom_auth,json=customAuth,proto3,oneof"`
}

type Target_TlsClientAuth struct {
	TlsClientAuth *Target_TLSClientAuth `protobuf:"bytes,5,opt,name=tls_client_auth,json=tlsClientAuth,proto3,oneof"`
}

type Target_PbTokenAuth struct {
	PbTokenAuth *Target_PacketBrokerTokenAuth `protobuf:"bytes,7,opt,name=pb_token_auth,json=pbTokenAuth,proto3,oneof"`
}

func (*Target_BasicAuth_) isTarget_DefaultAuthentication() {}

func (*Target_CustomAuth_) isTarget_DefaultAuthentication() {}

func (*Target_TlsClientAuth) isTarget_DefaultAuthentication() {}

func (*Target_PbTokenAuth) isTarget_DefaultAuthentication() {}

type Target_BasicAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Target_BasicAuth) Reset() {
	*x = Target_BasicAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_v3_target_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_BasicAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_BasicAuth) ProtoMessage() {}

func (x *Target_BasicAuth) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_v3_target_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_BasicAuth.ProtoReflect.Descriptor instead.
func (*Target_BasicAuth) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_v3_target_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Target_BasicAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Target_BasicAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Target_CustomAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Custom authorization value.
	// When using an HTTP protocol, this is used as the raw Authorization header value.
	// The value may include the authorization type (Bearer, Basic, Key, etc).
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Target_CustomAuth) Reset() {
	*x = Target_CustomAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_v3_target_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_CustomAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_CustomAuth) ProtoMessage() {}

func (x *Target_CustomAuth) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_v3_target_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_CustomAuth.ProtoReflect.Descriptor instead.
func (*Target_CustomAuth) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_v3_target_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Target_CustomAuth) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Target_TLSClientAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PEM encoded client certificate.
	Cert []byte `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	// PEM encoded private key.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Target_TLSClientAuth) Reset() {
	*x = Target_TLSClientAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_v3_target_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_TLSClientAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_TLSClientAuth) ProtoMessage() {}

func (x *Target_TLSClientAuth) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_v3_target_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_TLSClientAuth.ProtoReflect.Descriptor instead.
func (*Target_TLSClientAuth) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_v3_target_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Target_TLSClientAuth) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *Target_TLSClientAuth) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Target_PacketBrokerTokenAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Target_PacketBrokerTokenAuth) Reset() {
	*x = Target_PacketBrokerTokenAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_v3_target_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_PacketBrokerTokenAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_PacketBrokerTokenAuth) ProtoMessage() {}

func (x *Target_PacketBrokerTokenAuth) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_v3_target_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_PacketBrokerTokenAuth.ProtoReflect.Descriptor instead.
func (*Target_PacketBrokerTokenAuth) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_v3_target_proto_rawDescGZIP(), []int{0, 3}
}

type Target_Authentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Target_Authentication_BasicAuth
	//	*Target_Authentication_CustomAuth
	//	*Target_Authentication_TlsClientAuth
	//	*Target_Authentication_PbTokenAuth
	Value isTarget_Authentication_Value `protobuf_oneof:"value"`
}

func (x *Target_Authentication) Reset() {
	*x = Target_Authentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packetbroker_api_v3_target_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Authentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Authentication) ProtoMessage() {}

func (x *Target_Authentication) ProtoReflect() protoreflect.Message {
	mi := &file_packetbroker_api_v3_target_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Authentication.ProtoReflect.Descriptor instead.
func (*Target_Authentication) Descriptor() ([]byte, []int) {
	return file_packetbroker_api_v3_target_proto_rawDescGZIP(), []int{0, 4}
}

func (m *Target_Authentication) GetValue() isTarget_Authentication_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Target_Authentication) GetBasicAuth() *Target_BasicAuth {
	if x, ok := x.GetValue().(*Target_Authentication_BasicAuth); ok {
		return x.BasicAuth
	}
	return nil
}

func (x *Target_Authentication) GetCustomAuth() *Target_CustomAuth {
	if x, ok := x.GetValue().(*Target_Authentication_CustomAuth); ok {
		return x.CustomAuth
	}
	return nil
}

func (x *Target_Authentication) GetTlsClientAuth() *Target_TLSClientAuth {
	if x, ok := x.GetValue().(*Target_Authentication_TlsClientAuth); ok {
		return x.TlsClientAuth
	}
	return nil
}

func (x *Target_Authentication) GetPbTokenAuth() *Target_PacketBrokerTokenAuth {
	if x, ok := x.GetValue().(*Target_Authentication_PbTokenAuth); ok {
		return x.PbTokenAuth
	}
	return nil
}

type isTarget_Authentication_Value interface {
	isTarget_Authentication_Value()
}

type Target_Authentication_BasicAuth struct {
	BasicAuth *Target_BasicAuth `protobuf:"bytes,1,opt,name=basic_auth,json=basicAuth,proto3,oneof"`
}

type Target_Authentication_CustomAuth struct {
	CustomAuth *Target_CustomAuth `protobuf:"bytes,2,opt,name=custom_auth,json=customAuth,proto3,oneof"`
}

type Target_Authentication_TlsClientAuth struct {
	TlsClientAuth *Target_TLSClientAuth `protobuf:"bytes,3,opt,name=tls_client_auth,json=tlsClientAuth,proto3,oneof"`
}

type Target_Authentication_PbTokenAuth struct {
	PbTokenAuth *Target_PacketBrokerTokenAuth `protobuf:"bytes,4,opt,name=pb_token_auth,json=pbTokenAuth,proto3,oneof"`
}

func (*Target_Authentication_BasicAuth) isTarget_Authentication_Value() {}

func (*Target_Authentication_CustomAuth) isTarget_Authentication_Value() {}

func (*Target_Authentication_TlsClientAuth) isTarget_Authentication_Value() {}

func (*Target_Authentication_PbTokenAuth) isTarget_Authentication_Value() {}

var File_packetbroker_api_v3_target_proto protoreflect.FileDescriptor

var file_packetbroker_api_v3_target_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x1a, 0x1f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x0a, 0x0a, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x09, 0x66, 0x5f, 0x6e, 0x73,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x4e, 0x73,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x5f, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x4e, 0x73, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x09, 0x68, 0x5f, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x4e, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x72, 0x6f, 0x6f, 0x74, 0x43, 0x61, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x49, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x12, 0x53, 0x0a, 0x0f, 0x74, 0x6c,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x54, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00,
	0x52, 0x0d, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x57, 0x0a, 0x0d, 0x70, 0x62, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x62, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x7b, 0x0a, 0x1c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x19, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x43, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x22, 0x0a, 0x0a, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x35,
	0x0a, 0x0d, 0x54, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63,
	0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x17, 0x0a, 0x15, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0xda,
	0x02, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x46, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x53, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x57, 0x0a, 0x0d, 0x70, 0x62, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x78, 0x0a, 0x1e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x29, 0x5a, 0x27, 0x67, 0x6f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x3b, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_packetbroker_api_v3_target_proto_rawDescOnce sync.Once
	file_packetbroker_api_v3_target_proto_rawDescData = file_packetbroker_api_v3_target_proto_rawDesc
)

func file_packetbroker_api_v3_target_proto_rawDescGZIP() []byte {
	file_packetbroker_api_v3_target_proto_rawDescOnce.Do(func() {
		file_packetbroker_api_v3_target_proto_rawDescData = protoimpl.X.CompressGZIP(file_packetbroker_api_v3_target_proto_rawDescData)
	})
	return file_packetbroker_api_v3_target_proto_rawDescData
}

var file_packetbroker_api_v3_target_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_packetbroker_api_v3_target_proto_goTypes = []interface{}{
	(*Target)(nil),                       // 0: org.packetbroker.v3.Target
	(*Target_BasicAuth)(nil),             // 1: org.packetbroker.v3.Target.BasicAuth
	(*Target_CustomAuth)(nil),            // 2: org.packetbroker.v3.Target.CustomAuth
	(*Target_TLSClientAuth)(nil),         // 3: org.packetbroker.v3.Target.TLSClientAuth
	(*Target_PacketBrokerTokenAuth)(nil), // 4: org.packetbroker.v3.Target.PacketBrokerTokenAuth
	(*Target_Authentication)(nil),        // 5: org.packetbroker.v3.Target.Authentication
	nil,                                  // 6: org.packetbroker.v3.Target.OriginNetIdAuthenticationEntry
	(Protocol)(0),                        // 7: org.packetbroker.v3.Protocol
}
var file_packetbroker_api_v3_target_proto_depIdxs = []int32{
	7,  // 0: org.packetbroker.v3.Target.protocol:type_name -> org.packetbroker.v3.Protocol
	1,  // 1: org.packetbroker.v3.Target.basic_auth:type_name -> org.packetbroker.v3.Target.BasicAuth
	2,  // 2: org.packetbroker.v3.Target.custom_auth:type_name -> org.packetbroker.v3.Target.CustomAuth
	3,  // 3: org.packetbroker.v3.Target.tls_client_auth:type_name -> org.packetbroker.v3.Target.TLSClientAuth
	4,  // 4: org.packetbroker.v3.Target.pb_token_auth:type_name -> org.packetbroker.v3.Target.PacketBrokerTokenAuth
	6,  // 5: org.packetbroker.v3.Target.origin_net_id_authentication:type_name -> org.packetbroker.v3.Target.OriginNetIdAuthenticationEntry
	1,  // 6: org.packetbroker.v3.Target.Authentication.basic_auth:type_name -> org.packetbroker.v3.Target.BasicAuth
	2,  // 7: org.packetbroker.v3.Target.Authentication.custom_auth:type_name -> org.packetbroker.v3.Target.CustomAuth
	3,  // 8: org.packetbroker.v3.Target.Authentication.tls_client_auth:type_name -> org.packetbroker.v3.Target.TLSClientAuth
	4,  // 9: org.packetbroker.v3.Target.Authentication.pb_token_auth:type_name -> org.packetbroker.v3.Target.PacketBrokerTokenAuth
	5,  // 10: org.packetbroker.v3.Target.OriginNetIdAuthenticationEntry.value:type_name -> org.packetbroker.v3.Target.Authentication
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_packetbroker_api_v3_target_proto_init() }
func file_packetbroker_api_v3_target_proto_init() {
	if File_packetbroker_api_v3_target_proto != nil {
		return
	}
	file_packetbroker_api_v3_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_packetbroker_api_v3_target_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_v3_target_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_BasicAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_v3_target_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_CustomAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_v3_target_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_TLSClientAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_v3_target_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_PacketBrokerTokenAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packetbroker_api_v3_target_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Authentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packetbroker_api_v3_target_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Target_BasicAuth_)(nil),
		(*Target_CustomAuth_)(nil),
		(*Target_TlsClientAuth)(nil),
		(*Target_PbTokenAuth)(nil),
	}
	file_packetbroker_api_v3_target_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Target_Authentication_BasicAuth)(nil),
		(*Target_Authentication_CustomAuth)(nil),
		(*Target_Authentication_TlsClientAuth)(nil),
		(*Target_Authentication_PbTokenAuth)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packetbroker_api_v3_target_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packetbroker_api_v3_target_proto_goTypes,
		DependencyIndexes: file_packetbroker_api_v3_target_proto_depIdxs,
		MessageInfos:      file_packetbroker_api_v3_target_proto_msgTypes,
	}.Build()
	File_packetbroker_api_v3_target_proto = out.File
	file_packetbroker_api_v3_target_proto_rawDesc = nil
	file_packetbroker_api_v3_target_proto_goTypes = nil
	file_packetbroker_api_v3_target_proto_depIdxs = nil
}
